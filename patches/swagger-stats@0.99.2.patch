diff --git a/lib/swsAuth.js b/lib/swsAuth.js
index c6fdf559b826662b377664fbfb516a604cd5ef9e..a5e3d3706aebbf23bf6712dc463b7ab582fcbcec 100644
--- a/lib/swsAuth.js
+++ b/lib/swsAuth.js
@@ -60,7 +60,7 @@ class SwsAuth {
                 // renew it
                 //sessionIDs[sessionIdCookie] = Date.now();
                 this.storeSessionID(sessionIdCookie);
-                cookies.set('sws-session-id',sessionIdCookie,{path:swsSettings.basePath+swsSettings.uriPath,maxAge:swsSettings.sessionMaxAge*1000});
+                cookies.set('sws-session-id',sessionIdCookie,{path: swsSettings.cookiePath ?? swsSettings.basePath+swsSettings.uriPath,maxAge:swsSettings.sessionMaxAge*1000});
                 // Ok
                 req['sws-auth'] = true;
                 return true;
@@ -92,7 +92,7 @@ class SwsAuth {
                         let sessid = uuidv1();
                         this.storeSessionID(sessid);
                         // Set session cookie with expiration in 15 min
-                        cookies.set('sws-session-id',sessid,{path:swsSettings.basePath+swsSettings.uriPath,maxAge:swsSettings.sessionMaxAge*1000});
+                        cookies.set('sws-session-id',sessid,{path: swsSettings.cookiePath ?? swsSettings.basePath+swsSettings.uriPath,maxAge:swsSettings.sessionMaxAge*1000});
                     }
                     req['sws-auth'] = true;
                     return true;
diff --git a/lib/swssettings.js b/lib/swssettings.js
index b2a4384735b9539daf5694079c78bf6686177457..58c1014ca2db208bf3e772bc8a3db618a6feaaf5 100644
--- a/lib/swssettings.js
+++ b/lib/swssettings.js
@@ -84,6 +84,8 @@ class SwsSettings {
         // must return true if user authenticated, false if not
         // eg: (req) => { if(req.user.isAdmin) {return true;} else {return false }}
         this.customAuth = null;
+			
+				this.cookiePath = null;
 
         // Callback to invoke to authenticate request to /swagger-stats/stats and /swagger-stats/metrics
         // If authentication is enabled (option authentication=true),