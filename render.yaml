services:
  # Nestjs server
  - type: web
    name: nestjs-dev
    env: node
    repo: https://github.com/aqaratech/aqtech.git
    region: frankfurt
    plan: Standard
    branch: initNestjs
    # numInstances: 1
    # maxInstances: 1
    buildCommand: pnpm install --filter @self/backend... && cd packages/backend && pnpm build
    startCommand: cd packages/backend && pnpm run start:prod
    healthCheckPath: /health
    autoDeploy: true
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: elephant
          property: connectionString
      - key: PORT
        value: 3002
    buildFilter:
      paths:
        - packages/backend/**
      ignoredPaths:
        - packages/backend/**/*.spec.ts

  # Site
  # - type: web
  #   name: site
  #   env: node
  #   repo: https://github.com/aqaratech/aqtech.git
  #   region: frankfurt
  #   plan: Starter
  #   branch: initNestjs
  #   # numInstances: 1
  #   # maxInstances: 1
  #   buildCommand: pnpm install --filter=. --filter=@self/site... && pnpm build --filter=@self/site...
  #   startCommand: cd packages/site && node build/index.js
  #   # healthCheckPath: /health
  #   autoDeploy: true
  #   envVars:
  #     - key: VITE_API_URL
  #       fromService:
  #         type: web
  #         name: nestjs-dev
  #         property: hostport
  #     - key: VITE_RENDER
  #       value: true

  #   buildFilter:
  #     paths:
  #       - packages/site/**
  #     ignoredPaths:
  #       - packages/site/**/*.spec.ts

databases:
  - name: elephant
    region: frankfurt
    plan: Free
    # databaseName: postgres # optional (Render may add a suffix)
    # user: postgres # optional
