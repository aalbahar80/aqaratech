name: Test

on:
  workflow_dispatch:
  push:

# cancel in-progress runs on new commits to same PR (gitub.event.number), fallback to ref
# https://docs.github.com/en/actions/learn-github-actions/contexts#github-context
concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
  cancel-in-progress: true

env:
  # we call `pnpm playwright install` instead
  # https://github.com/sveltejs/kit/blob/9dbcce994161ec7191a8a8ea5a510437232dd1ce/.github/workflows/ci.yml#L12
  PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: '1'

jobs:
  shouldTest:
    # By the time we merge the release PR, we've already tested the packages.
    name: Should Test
    runs-on: ubuntu-latest
    outputs:
      shouldTest: ${{ steps.shouldTest.outputs.shouldTest }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      # Skip this workflow if the commit message starts with "Version Packages".
      - name: Should Test
        id: shouldTest
        run: |
          echo "shouldTest=${{ !startsWith(github.event.head_commit.message, 'Version Packages') }}" >>$GITHUB_OUTPUT

  test:
    name: Build and Test
    needs: shouldTest
    if: ${{ needs.shouldTest.outputs.shouldTest == 'true' }}
    timeout-minutes: 15
    # use env for auth0
    environment: dev
    runs-on: ubuntu-latest
    # runs-on:
    #   group: Default Larger Runners
    #   labels: ubuntu-latest-16-cores
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ secrets.TURBO_TEAM }}

    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main
      - uses: DeterminateSystems/magic-nix-cache-action@main
      - name: Check Nixpkgs inputs
        uses: DeterminateSystems/flake-checker-action@main

      - run: nix develop --command pnpm install --frozen-lockfile

      - run: nix develop --command pnpm run build -vvv

      - name: Set .env file
        shell: bash
        run: cp ./.env.example ./.env && cat ./packages/backend/prisma/.env.example >> ./.env

      # Move format/lint/check to a seperate job when removing `continue-on-error`
      - run: nix develop --command pnpm run format:all
        continue-on-error: true

      - run: nix develop --command pnpm run lint:all
        continue-on-error: true

      - run: nix develop --command pnpm run check:all
        continue-on-error: true

      - run: nix develop --command pnpm run test -vvv
        # env:
        #   DEBUG: 'pw:webserver'

      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: playwright-report
          retention-days: 2
          path: |
            packages/test/playwright-report/
            packages/test/test-results/
