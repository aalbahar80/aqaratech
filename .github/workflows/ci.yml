name: CI

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      appName:
        required: true
        type: string
      siteTag:
        required: false
        type: string
      backendTag:
        required: false
        type: string
      siteSentryRelease:
        required: false
        type: string
      backendSentryRelease:
        required: false
        type: string

env:
  # Reusable workflows do not inherit secrets from the calling workflow, because the calling workflow does not have an "environment" input.
  # Instead, use organization/repository secrets. Alternatively, you can convert this workflow to a composite action.
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
  SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}

jobs:
  build-package:
    if: ${{ inputs.siteTag }}
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    strategy:
      matrix:
        package: [site, backend]

    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - uses: pnpm/action-setup@v2
        with:
          version: 7

      - uses: actions/setup-node@v3
        with:
          node-version: 18
          # https://github.com/actions/setup-node/blob/main/docs/advanced-usage.md#caching-packages-data
          cache: 'pnpm'

      - run: pnpm -F . -F @self/${{ matrix.package }}... install --frozen-lockfile
        env:
          PRISMA_GENERATE_SKIP_AUTOINSTALL: 1
          # Also need to remove postinstall script

      - run: pnpm run build:${{ matrix.package }}

      - name: Install sentry-cli
        shell: bash
        run: curl -sL https://sentry.io/get-cli/ | SENTRY_CLI_VERSION="2.7.0" bash

      # TODO: rm prod condition
      - run: pnpm -F @self/site run sentry:release --version ${{ inputs.siteSentryRelease || inputs.siteTag }} --environment ${{ inputs.environment }}
        if: ${{ matrix.package == 'site' && inputs.environment == 'prod' }}

      # TODO: rm prod condition
      - run: pnpm -F @self/backend run sentry:release --version ${{ inputs.backendSentryRelease || inputs.backendTag }}  --environment ${{ inputs.environment }}
        if: ${{ matrix.package == 'backend' && inputs.environment == 'prod' }}

      - if: ${{ inputs.environment == 'prod' && matrix.package == 'site' }}
        name: Delete client sourcemaps
        shell: bash
        run: pnpm zx ./scripts/rm-sourcemaps.mjs ./packages/site/build/client --force

      - run: pnpm --filter @self/${{ matrix.package }} --prod deploy pruned

      - uses: ./.github/actions/build-image
        with:
          package: ${{ matrix.package }}
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
          customTag: ${{ matrix.package == 'site' && inputs.siteTag || inputs.backendTag }}

  deploy-app:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    needs: [build-site, build-backend]
    if: |
      always() &&
      (needs.build-site.result == 'success' || needs.build-site.result == 'skipped') &&
      (needs.build-backend.result == 'success' || needs.build-backend.result == 'skipped')
    timeout-minutes: 3
    steps:
      - uses: actions/checkout@v3

      - uses: ./.github/actions/deploy
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
          projectId: ${{ secrets.DO_PROJECT_ID }}
          appName: ${{ inputs.appName }}
          siteTag: ${{ inputs.siteTag }}
          backendTag: ${{ inputs.backendTag }}
