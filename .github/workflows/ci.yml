name: CI
on: workflow_dispatch

# cancel in-progress runs on new commits to same PR (gitub.event.number)
concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.sha }}
  cancel-in-progress: true

env:
  # we call `pnpm playwright install` instead
  # https://github.com/sveltejs/kit/blob/9dbcce994161ec7191a8a8ea5a510437232dd1ce/.github/workflows/ci.yml#L12
  PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: "1"

jobs:
  test:
    name: Build and Test
    timeout-minutes: 10
    # use env for auth0
    # environment: dev
    runs-on: ubuntu-latest
    # To use Remote Caching, uncomment the next lines and follow the steps below.
    # env:
    #  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
    #  TURBO_TEAM: ${{ secrets.TURBO_TEAM }}

    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - uses: pnpm/action-setup@v2
        with:
          version: 7

      - uses: actions/setup-node@v3
        with:
          node-version: 18
          # https://github.com/actions/setup-node/blob/main/docs/advanced-usage.md#caching-packages-data
          cache: "pnpm"

      - run: pnpm install --frozen-lockfile

      - run: pnpm -F @self/test exec playwright install chromium

      - name: Set .env file
        shell: bash
        run: |
          cp ./.env.ci ./.env

      - run: pnpm build

      - run: pnpm test

      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: playwright-report
          retention-days: 2
          path: |
            packages/test/playwright-report/
            packages/test/test-results/

  push:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    environment: prod
    # needs: test
    strategy:
      fail-fast: false
      matrix:
        package: [site, backend]
        # environments blocked by sk's static/dynamic vars (for /site only)
        # environment: [dev, prod]

    steps:
      - uses: actions/checkout@v3

      - name: Set .env file
        shell: bash
        env:
          # https://docs.github.com/en/actions/security-guides/encrypted-secrets#example-using-bash
          AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_CLIENT_SECRET }}
        run: |
          cp ./.env.prod ./.env
          echo AUTH0_CLIENT_SECRET="$AUTH0_CLIENT_SECRET" >> .env

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 600

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push site
        if: ${{ matrix.package == 'site' }}
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile.${{ matrix.package }}
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          load: false
          tags: registry.digitalocean.com/aqtech/aqaratech-${{ matrix.package }}:${{ github.ref_name }}-${{ github.sha }}
          cache-from: type=registry,ref=registry.digitalocean.com/aqtech/aqaratech-${{ matrix.package }}:buildcache
          cache-to: type=registry,ref=registry.digitalocean.com/aqtech/aqaratech-${{ matrix.package }}:buildcache,mode=max

      - name: Build and push backend
        if: ${{ matrix.package == 'backend' }}
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile.${{ matrix.package }}
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          load: false
          tags: registry.digitalocean.com/aqtech/aqaratech-api:${{ github.ref_name }}-${{ github.sha }}
          cache-from: type=registry,ref=registry.digitalocean.com/aqtech/aqaratech-api:buildcache
          cache-to: type=registry,ref=registry.digitalocean.com/aqtech/aqaratech-api:buildcache,mode=max
