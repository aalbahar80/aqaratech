name: Release

on:
  workflow_dispatch:
  push:
    tags:
      - "*"

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    environment: prod
    # needs: test
    strategy:
      fail-fast: false
      matrix:
        package: [site, backend]
        # environments blocked by sk's static/dynamic vars (for /site only)
        # environment: [dev, prod]

    steps:
      - uses: actions/checkout@v3

      - name: Set .env file
        shell: bash
        env:
          AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_CLIENT_SECRET }}
        run: ./scripts/set-env.sh .env.prod .env AUTH0_CLIENT_SECRET

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 600

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            registry.digitalocean.com/aqtech/aqaratech-${{ matrix.package }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile.${{ matrix.package }}
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          load: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=registry.digitalocean.com/aqtech/aqaratech-${{ matrix.package }}:buildcache
          cache-to: type=registry,ref=registry.digitalocean.com/aqtech/aqaratech-${{ matrix.package }}:buildcache,mode=max

  release:
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      # - name: Deploy DO App
      #   run: TODO

      - name: Create Github release
        uses: softprops/action-gh-release@v1
