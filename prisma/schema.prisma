generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["dataproxy", "referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  // url                  = "mysql://arfh7oejz4ae:pscale_pw_r8EqnC9tkz9qlUboQOn3Av9ER-2deIFJOeaC_5AH_3c@9fvowjf1xwxu.eu-west-2.psdb.cloud/prisma-planetscale?sslaccept=strict"
  // url                  = "mysql://44rf4b84b9ju:pscale_pw_AZaLMmRlIZ5dDY4qJyR64_Z8ru-j_f-yJ7FWCpMPDEw@9eqjzzwj3kra.eu-west-2.psdb.cloud/prisma-planetscale?sslaccept=strict"
  url                  = "mysql://127.0.0.1:3306/prisma-planetscale"
  referentialIntegrity = "prisma"
}

model Client {
  id                String             @id @default(uuid())
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  isActive          Boolean?           @default(true)
  firstName         String?
  secondName        String?
  thirdName         String?
  lastName          String?
  civilid           String?
  phone             String?
  email             String?
  expenses          Expense[]
  maintenanceOrders MaintenanceOrder[]
  properties        Property[]
}

model Expense {
  id                 String            @id @default(uuid())
  unitId             String?
  propertyId         String?
  clientId           String?
  maintenanceOrderId String?
  createdAt          DateTime          @default(now())
  updatedAt          DateTime          @updatedAt
  amount             Float?
  postDate           DateTime?
  category           String?
  memo               String?           @db.Text
  client             Client?           @relation(fields: [clientId], references: [id])
  maintenanceOrder   MaintenanceOrder? @relation(fields: [maintenanceOrderId], references: [id])
  property           Property?         @relation(fields: [propertyId], references: [id])
  unit               Unit?             @relation(fields: [unitId], references: [id])
}

model Lease {
  id           String        @id @default(uuid())
  tenantId     String?
  unitId       String?
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  startDate    DateTime?
  endDate      DateTime?
  monthlyRent  Float?
  deposit      Float?
  isSigned     Boolean?
  license      String?
  tenant       Tenant?       @relation(fields: [tenantId], references: [id])
  unit         Unit?         @relation(fields: [unitId], references: [id])
  transactions Transaction[]

  @@index([tenantId])
}

model Listing {
  id           String    @id @default(uuid())
  unitId       String?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  isActive     Boolean?
  available_on DateTime?
  leaseLength  String?
  title        String?
  description  String?   @db.Text
  unit         Unit?     @relation(fields: [unitId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model MaintenanceOrder {
  id          String    @id @default(uuid())
  tenantId    String?
  unitId      String?
  propertyId  String?
  clientId    String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  completedAt DateTime?
  title       String?
  description String?   @db.Text
  status      String?
  client      Client?   @relation(fields: [clientId], references: [id])
  property    Property? @relation(fields: [propertyId], references: [id])
  tenant      Tenant?   @relation(fields: [tenantId], references: [id])
  unit        Unit?     @relation(fields: [unitId], references: [id])
  expenses    Expense[]
}

model Property {
  id                String             @id @default(uuid())
  clientId          String?
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  area              String?
  block             String?
  avenue            String?
  street            String?
  number            String?
  client            Client?            @relation(fields: [clientId], references: [id])
  expenses          Expense[]
  maintenanceOrders MaintenanceOrder[]
  units             Unit[]
}

model Tenant {
  id                String             @id @default(uuid())
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  firstName         String?
  secondName        String?
  thirdName         String?
  lastName          String?
  civilid           String?
  dob               DateTime?
  phone             String?
  email             String?
  leases            Lease[]
  maintenanceOrders MaintenanceOrder[]
}

model Transaction {
  id         String    @id @default(uuid())
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  dueDate    DateTime?
  isPaid     Boolean?  @default(false)
  amount     Float?
  memo       String?   @db.Text
  receiptUrl String?
  leaseId    String?
  lease      Lease?    @relation(fields: [leaseId], references: [id])
}

model Unit {
  id                String             @id @default(uuid())
  propertyId        String?
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  unitNumber        String?
  floor             String?
  size              Float?
  bed               Float?
  bath              Float?
  marketRent        Float?
  type              String?
  usage             String?
  property          Property?          @relation(fields: [propertyId], references: [id])
  expenses          Expense[]
  leases            Lease[]
  listings          Listing[]
  maintenanceOrders MaintenanceOrder[]
}
