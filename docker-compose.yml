version: "3.5"
services:
  caddy:
    image: caddy/caddy:2.2.1-alpine
    container_name: caddy-service
    restart: unless-stopped
    ports:
      # - "80:80"
      - "2016:80"
      - "443:443"
    volumes:
      - $PWD/Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    links:
      - site:site
    networks:
      - aq-network

  site:
    build:
      context: .
      dockerfile: ./Dockerfile.site
    ports:
      - 3000:3000
    depends_on:
      - backend
    volumes:
      - $PWD/packages/site:/app/packages/site
    networks:
      - aq-network
    restart: unless-stopped

  backend:
    build:
      context: .
      dockerfile: ./Dockerfile.backend
    ports:
      - 3002:3002
    depends_on:
      - redis
      - postgres
    networks:
      - aq-network
    restart: unless-stopped

  redis:
    container_name: redis
    image: redis:latest
    networks:
      - aq-network

  postgres:
    container_name: postgres
    image: postgres:latest
    networks:
      - aq-network
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      PG_DATA: /var/lib/postgresql/data
    ports:
      - 5434:5432
    volumes:
      - postgres:/var/lib/postgresql/data

  pgadmin:
    links:
      - postgres:postgres
    container_name: pgadmin
    image: dpage/pgadmin4
    volumes:
      - postgres:/root/.pgadmin
    env_file:
      - .env
    networks:
      - aq-network

networks:
  aq-network:
    driver: bridge
    name: aq-network

volumes:
  caddy_data:
  caddy_config:
  postgres:
