/* tslint:disable */
/* eslint-disable */
/**
 * Aqaratech API
 * The Aqratech API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    PropertyBreadcrumbsDto,
    PropertyBreadcrumbsDtoFromJSON,
    PropertyBreadcrumbsDtoFromJSONTyped,
    PropertyBreadcrumbsDtoToJSON,
} from './PropertyBreadcrumbsDto';
import {
    UnitVacancyDto,
    UnitVacancyDtoFromJSON,
    UnitVacancyDtoFromJSONTyped,
    UnitVacancyDtoToJSON,
} from './UnitVacancyDto';

/**
 * 
 * @export
 * @interface PropertyOneDto
 */
export interface PropertyOneDto {
    /**
     * 
     * @type {string}
     * @memberof PropertyOneDto
     */
    readonly id: string;
    /**
     * 
     * @type {Date}
     * @memberof PropertyOneDto
     */
    readonly createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof PropertyOneDto
     */
    readonly updatedAt: Date;
    /**
     * 
     * @type {Array<UnitVacancyDto>}
     * @memberof PropertyOneDto
     */
    readonly units: Array<UnitVacancyDto>;
    /**
     * 
     * @type {PropertyBreadcrumbsDto}
     * @memberof PropertyOneDto
     */
    breadcrumbs: PropertyBreadcrumbsDto;
    /**
     * 
     * @type {string}
     * @memberof PropertyOneDto
     */
    portfolioId: string;
    /**
     * 
     * @type {string}
     * @memberof PropertyOneDto
     */
    area: string | null;
    /**
     * 
     * @type {string}
     * @memberof PropertyOneDto
     */
    block: string | null;
    /**
     * 
     * @type {string}
     * @memberof PropertyOneDto
     */
    avenue: string | null;
    /**
     * 
     * @type {string}
     * @memberof PropertyOneDto
     */
    street: string | null;
    /**
     * 
     * @type {string}
     * @memberof PropertyOneDto
     */
    number: string | null;
    /**
     * 
     * @type {string}
     * @memberof PropertyOneDto
     */
    parcel: string | null;
    /**
     * 
     * @type {string}
     * @memberof PropertyOneDto
     */
    paci: string | null;
    /**
     * 
     * @type {number}
     * @memberof PropertyOneDto
     */
    cost: number | null;
}

export function PropertyOneDtoFromJSON(json: any): PropertyOneDto {
    return PropertyOneDtoFromJSONTyped(json, false);
}

export function PropertyOneDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): PropertyOneDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'createdAt': (new Date(json['createdAt'])),
        'updatedAt': (new Date(json['updatedAt'])),
        'units': ((json['units'] as Array<any>).map(UnitVacancyDtoFromJSON)),
        'breadcrumbs': PropertyBreadcrumbsDtoFromJSON(json['breadcrumbs']),
        'portfolioId': json['portfolioId'],
        'area': json['area'],
        'block': json['block'],
        'avenue': json['avenue'],
        'street': json['street'],
        'number': json['number'],
        'parcel': json['parcel'],
        'paci': json['paci'],
        'cost': json['cost'],
    };
}

export function PropertyOneDtoToJSON(value?: PropertyOneDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'breadcrumbs': PropertyBreadcrumbsDtoToJSON(value.breadcrumbs),
        'portfolioId': value.portfolioId,
        'area': value.area,
        'block': value.block,
        'avenue': value.avenue,
        'street': value.street,
        'number': value.number,
        'parcel': value.parcel,
        'paci': value.paci,
        'cost': value.cost,
    };
}

