/* tslint:disable */
/* eslint-disable */
/**
 * Aqaratech API
 * The Aqratech API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateUnitDto
 */
export interface CreateUnitDto {
    /**
     * 
     * @type {string}
     * @memberof CreateUnitDto
     */
    readonly id: string;
    /**
     * 
     * @type {Date}
     * @memberof CreateUnitDto
     */
    readonly createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof CreateUnitDto
     */
    readonly updatedAt: Date;
    /**
     * 
     * @type {string}
     * @memberof CreateUnitDto
     */
    propertyId: string;
    /**
     * 
     * @type {string}
     * @memberof CreateUnitDto
     */
    unitNumber: string;
    /**
     * 
     * @type {number}
     * @memberof CreateUnitDto
     */
    floor?: number | null;
    /**
     * 
     * @type {number}
     * @memberof CreateUnitDto
     */
    size?: number | null;
    /**
     * 
     * @type {number}
     * @memberof CreateUnitDto
     */
    bed?: number | null;
    /**
     * 
     * @type {number}
     * @memberof CreateUnitDto
     */
    bath?: number | null;
    /**
     * 
     * @type {number}
     * @memberof CreateUnitDto
     */
    marketRent?: number | null;
    /**
     * 
     * @type {string}
     * @memberof CreateUnitDto
     */
    type?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CreateUnitDto
     */
    usage?: string | null;
}

export function CreateUnitDtoFromJSON(json: any): CreateUnitDto {
    return CreateUnitDtoFromJSONTyped(json, false);
}

export function CreateUnitDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateUnitDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'createdAt': (new Date(json['createdAt'])),
        'updatedAt': (new Date(json['updatedAt'])),
        'propertyId': json['propertyId'],
        'unitNumber': json['unitNumber'],
        'floor': !exists(json, 'floor') ? undefined : json['floor'],
        'size': !exists(json, 'size') ? undefined : json['size'],
        'bed': !exists(json, 'bed') ? undefined : json['bed'],
        'bath': !exists(json, 'bath') ? undefined : json['bath'],
        'marketRent': !exists(json, 'marketRent') ? undefined : json['marketRent'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'usage': !exists(json, 'usage') ? undefined : json['usage'],
    };
}

export function CreateUnitDtoToJSON(value?: CreateUnitDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'propertyId': value.propertyId,
        'unitNumber': value.unitNumber,
        'floor': value.floor,
        'size': value.size,
        'bed': value.bed,
        'bath': value.bath,
        'marketRent': value.marketRent,
        'type': value.type,
        'usage': value.usage,
    };
}

