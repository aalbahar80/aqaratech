/* tslint:disable */
/* eslint-disable */
/**
 * Aqaratech API
 * The Aqratech API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    PaginatedDto,
    PaginatedDtoFromJSON,
    PaginatedDtoFromJSONTyped,
    PaginatedDtoToJSON,
} from './PaginatedDto';
import {
    PaginatedMetaDto,
    PaginatedMetaDtoFromJSON,
    PaginatedMetaDtoFromJSONTyped,
    PaginatedMetaDtoToJSON,
} from './PaginatedMetaDto';
import {
    PaginatedResponseOfPropertyDtoAllOf,
    PaginatedResponseOfPropertyDtoAllOfFromJSON,
    PaginatedResponseOfPropertyDtoAllOfFromJSONTyped,
    PaginatedResponseOfPropertyDtoAllOfToJSON,
} from './PaginatedResponseOfPropertyDtoAllOf';
import {
    PropertyDto,
    PropertyDtoFromJSON,
    PropertyDtoFromJSONTyped,
    PropertyDtoToJSON,
} from './PropertyDto';

/**
 * 
 * @export
 * @interface PaginatedResponseOfPropertyDto
 */
export interface PaginatedResponseOfPropertyDto {
    /**
     * 
     * @type {PaginatedDto}
     * @memberof PaginatedResponseOfPropertyDto
     */
    meta: PaginatedDto;
    /**
     * 
     * @type {Array<PropertyDto>}
     * @memberof PaginatedResponseOfPropertyDto
     */
    results?: Array<PropertyDto>;
}

export function PaginatedResponseOfPropertyDtoFromJSON(json: any): PaginatedResponseOfPropertyDto {
    return PaginatedResponseOfPropertyDtoFromJSONTyped(json, false);
}

export function PaginatedResponseOfPropertyDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): PaginatedResponseOfPropertyDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'meta': PaginatedDtoFromJSON(json['meta']),
        'results': !exists(json, 'results') ? undefined : ((json['results'] as Array<any>).map(PropertyDtoFromJSON)),
    };
}

export function PaginatedResponseOfPropertyDtoToJSON(value?: PaginatedResponseOfPropertyDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'meta': PaginatedDtoToJSON(value.meta),
        'results': value.results === undefined ? undefined : ((value.results as Array<any>).map(PropertyDtoToJSON)),
    };
}

