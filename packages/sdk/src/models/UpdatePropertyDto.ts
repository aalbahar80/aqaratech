/* tslint:disable */
/* eslint-disable */
/**
 * Aqaratech API
 * The Aqratech API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UpdatePropertyDto
 */
export interface UpdatePropertyDto {
    /**
     * 
     * @type {string}
     * @memberof UpdatePropertyDto
     */
    readonly id?: string;
    /**
     * 
     * @type {Date}
     * @memberof UpdatePropertyDto
     */
    readonly createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof UpdatePropertyDto
     */
    readonly updatedAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof UpdatePropertyDto
     */
    area?: string | null;
    /**
     * 
     * @type {string}
     * @memberof UpdatePropertyDto
     */
    block?: string | null;
    /**
     * 
     * @type {string}
     * @memberof UpdatePropertyDto
     */
    avenue?: string | null;
    /**
     * 
     * @type {string}
     * @memberof UpdatePropertyDto
     */
    street?: string | null;
    /**
     * 
     * @type {string}
     * @memberof UpdatePropertyDto
     */
    number?: string | null;
    /**
     * 
     * @type {string}
     * @memberof UpdatePropertyDto
     */
    parcel?: string | null;
    /**
     * 
     * @type {string}
     * @memberof UpdatePropertyDto
     */
    paci?: string | null;
    /**
     * 
     * @type {number}
     * @memberof UpdatePropertyDto
     */
    cost?: number | null;
}

export function UpdatePropertyDtoFromJSON(json: any): UpdatePropertyDto {
    return UpdatePropertyDtoFromJSONTyped(json, false);
}

export function UpdatePropertyDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdatePropertyDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'createdAt': !exists(json, 'createdAt') ? undefined : (new Date(json['createdAt'])),
        'updatedAt': !exists(json, 'updatedAt') ? undefined : (new Date(json['updatedAt'])),
        'area': !exists(json, 'area') ? undefined : json['area'],
        'block': !exists(json, 'block') ? undefined : json['block'],
        'avenue': !exists(json, 'avenue') ? undefined : json['avenue'],
        'street': !exists(json, 'street') ? undefined : json['street'],
        'number': !exists(json, 'number') ? undefined : json['number'],
        'parcel': !exists(json, 'parcel') ? undefined : json['parcel'],
        'paci': !exists(json, 'paci') ? undefined : json['paci'],
        'cost': !exists(json, 'cost') ? undefined : json['cost'],
    };
}

export function UpdatePropertyDtoToJSON(value?: UpdatePropertyDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'area': value.area,
        'block': value.block,
        'avenue': value.avenue,
        'street': value.street,
        'number': value.number,
        'parcel': value.parcel,
        'paci': value.paci,
        'cost': value.cost,
    };
}

