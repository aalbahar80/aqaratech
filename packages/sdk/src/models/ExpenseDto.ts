/* tslint:disable */
/* eslint-disable */
/**
 * Aqaratech API
 * The Aqratech API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ExpenseDto
 */
export interface ExpenseDto {
    /**
     * 
     * @type {string}
     * @memberof ExpenseDto
     */
    readonly id: string;
    /**
     * 
     * @type {Date}
     * @memberof ExpenseDto
     */
    readonly createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof ExpenseDto
     */
    readonly updatedAt: Date;
    /**
     * 
     * @type {string}
     * @memberof ExpenseDto
     */
    unitId?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ExpenseDto
     */
    propertyId?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ExpenseDto
     */
    portfolioId?: string | null;
    /**
     * 
     * @type {number}
     * @memberof ExpenseDto
     */
    amount: number;
    /**
     * 
     * @type {Date}
     * @memberof ExpenseDto
     */
    postAt: Date;
    /**
     * 
     * @type {string}
     * @memberof ExpenseDto
     */
    memo: string | null;
}

export function ExpenseDtoFromJSON(json: any): ExpenseDto {
    return ExpenseDtoFromJSONTyped(json, false);
}

export function ExpenseDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ExpenseDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'createdAt': (new Date(json['createdAt'])),
        'updatedAt': (new Date(json['updatedAt'])),
        'unitId': !exists(json, 'unitId') ? undefined : json['unitId'],
        'propertyId': !exists(json, 'propertyId') ? undefined : json['propertyId'],
        'portfolioId': !exists(json, 'portfolioId') ? undefined : json['portfolioId'],
        'amount': json['amount'],
        'postAt': (new Date(json['postAt'])),
        'memo': json['memo'],
    };
}

export function ExpenseDtoToJSON(value?: ExpenseDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'unitId': value.unitId,
        'propertyId': value.propertyId,
        'portfolioId': value.portfolioId,
        'amount': value.amount,
        'postAt': (value.postAt.toISOString()),
        'memo': value.memo,
    };
}

