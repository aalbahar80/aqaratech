openapi: 3.0.0
paths:
  /:
    get:
      operationId: AppController_getHello
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: string
  /profile:
    get:
      operationId: AppController_getProfile
      parameters: []
      responses:
        '200':
          description: ''
  /tenants:
    post:
      operationId: TenantsController_create
      parameters:
        - name: x-role-id
          in: header
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantDto'
      tags: &ref_0
        - tenants
    get:
      operationId: TenantsController_findAll
      parameters:
        - name: page
          required: false
          in: query
          example: 1
          schema:
            minimum: 1
            default: 1
            type: number
        - name: take
          required: false
          in: query
          example: 1
          schema:
            minimum: 1
            maximum: 50
            default: 10
            type: number
        - name: q
          required: false
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: PaginatedResponseOfTenantDto
                allOf:
                  - $ref: '#/components/schemas/PaginatedMetaDto'
                  - properties:
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/TenantDto'
      tags: *ref_0
  /tenants/{id}:
    get:
      operationId: TenantsController_findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantDto'
      tags: *ref_0
    patch:
      operationId: TenantsController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTenantDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantDto'
      tags: *ref_0
    delete:
      operationId: TenantsController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantDto'
      tags: *ref_0
  /portfolios:
    post:
      operationId: PortfoliosController_create
      parameters:
        - name: x-role-id
          in: header
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortfolioDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortfolioDto'
      tags: &ref_1
        - portfolios
    get:
      operationId: PortfoliosController_findAll
      parameters:
        - name: page
          required: false
          in: query
          example: 1
          schema:
            minimum: 1
            default: 1
            type: number
        - name: take
          required: false
          in: query
          example: 1
          schema:
            minimum: 1
            maximum: 50
            default: 10
            type: number
        - name: q
          required: false
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: PaginatedResponseOfPortfolioDto
                allOf:
                  - $ref: '#/components/schemas/PaginatedMetaDto'
                  - properties:
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/PortfolioDto'
      tags: *ref_1
  /portfolios/{id}:
    get:
      operationId: PortfoliosController_findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortfolioDto'
      tags: *ref_1
    patch:
      operationId: PortfoliosController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePortfolioDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortfolioDto'
      tags: *ref_1
    delete:
      operationId: PortfoliosController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortfolioDto'
      tags: *ref_1
  /users:
    post:
      operationId: UsersController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDto'
      tags: &ref_2
        - users
    get:
      operationId: UsersController_findAll
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: PaginatedResponseOfUserDto
                allOf:
                  - $ref: '#/components/schemas/PaginatedMetaDto'
                  - properties:
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/UserDto'
      tags: *ref_2
  /users/by-email:
    get:
      operationId: UsersController_findOneByEmail
      parameters:
        - name: email
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDto'
        '404':
          description: ''
      tags: *ref_2
  /users/{id}:
    get:
      operationId: UsersController_findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDto'
        '404':
          description: ''
      tags: *ref_2
  /properties:
    post:
      operationId: PropertiesController_create
      parameters:
        - name: x-role-id
          in: header
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyDto'
      tags: &ref_3
        - properties
    get:
      operationId: PropertiesController_findAll
      parameters:
        - name: page
          required: false
          in: query
          example: 1
          schema:
            minimum: 1
            default: 1
            type: number
        - name: take
          required: false
          in: query
          example: 1
          schema:
            minimum: 1
            maximum: 50
            default: 10
            type: number
        - name: q
          required: false
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: PaginatedResponseOfPropertyDto
                allOf:
                  - $ref: '#/components/schemas/PaginatedMetaDto'
                  - properties:
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/PropertyDto'
      tags: *ref_3
  /properties/{id}:
    get:
      operationId: PropertiesController_findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyDto'
      tags: *ref_3
    patch:
      operationId: PropertiesController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePropertyDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyDto'
      tags: *ref_3
    delete:
      operationId: PropertiesController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyDto'
      tags: *ref_3
  /units:
    post:
      operationId: UnitsController_create
      parameters:
        - name: x-role-id
          in: header
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUnitDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitDto'
      tags: &ref_4
        - units
    get:
      operationId: UnitsController_findAll
      parameters:
        - name: page
          required: false
          in: query
          example: 1
          schema:
            minimum: 1
            default: 1
            type: number
        - name: take
          required: false
          in: query
          example: 1
          schema:
            minimum: 1
            maximum: 50
            default: 10
            type: number
        - name: q
          required: false
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: PaginatedResponseOfUnitDto
                allOf:
                  - $ref: '#/components/schemas/PaginatedMetaDto'
                  - properties:
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/UnitDto'
      tags: *ref_4
  /units/{id}:
    get:
      operationId: UnitsController_findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitDto'
      tags: *ref_4
    patch:
      operationId: UnitsController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUnitDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitDto'
      tags: *ref_4
    delete:
      operationId: UnitsController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitDto'
      tags: *ref_4
  /leases:
    post:
      operationId: LeasesController_create
      parameters:
        - name: x-role-id
          in: header
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LeaseDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaseDto'
      tags: &ref_5
        - leases
    get:
      operationId: LeasesController_findAll
      parameters:
        - name: page
          required: false
          in: query
          example: 1
          schema:
            minimum: 1
            default: 1
            type: number
        - name: take
          required: false
          in: query
          example: 1
          schema:
            minimum: 1
            maximum: 50
            default: 10
            type: number
        - name: q
          required: false
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: PaginatedResponseOfLeaseDto
                allOf:
                  - $ref: '#/components/schemas/PaginatedMetaDto'
                  - properties:
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/LeaseDto'
      tags: *ref_5
  /leases/{id}:
    get:
      operationId: LeasesController_findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaseDto'
      tags: *ref_5
    patch:
      operationId: LeasesController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLeaseDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaseDto'
      tags: *ref_5
    delete:
      operationId: LeasesController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaseDto'
      tags: *ref_5
  /leaseInvoices:
    post:
      operationId: LeaseInvoicesController_create
      parameters:
        - name: x-role-id
          in: header
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LeaseInvoiceDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaseInvoiceDto'
      tags: &ref_6
        - leaseInvoices
    get:
      operationId: LeaseInvoicesController_findAll
      parameters:
        - name: page
          required: false
          in: query
          example: 1
          schema:
            minimum: 1
            default: 1
            type: number
        - name: take
          required: false
          in: query
          example: 1
          schema:
            minimum: 1
            maximum: 50
            default: 10
            type: number
        - name: q
          required: false
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: PaginatedResponseOfLeaseInvoiceDto
                allOf:
                  - $ref: '#/components/schemas/PaginatedMetaDto'
                  - properties:
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/LeaseInvoiceDto'
      tags: *ref_6
  /leaseInvoices/{id}:
    get:
      operationId: LeaseInvoicesController_findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaseInvoiceDto'
      tags: *ref_6
    patch:
      operationId: LeaseInvoicesController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLeaseInvoiceDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaseInvoiceDto'
      tags: *ref_6
    delete:
      operationId: LeaseInvoicesController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaseInvoiceDto'
      tags: *ref_6
  /expenses:
    post:
      operationId: ExpensesController_create
      parameters:
        - name: x-role-id
          in: header
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExpenseDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseDto'
      tags: &ref_7
        - expenses
    get:
      operationId: ExpensesController_findAll
      parameters:
        - name: page
          required: false
          in: query
          example: 1
          schema:
            minimum: 1
            default: 1
            type: number
        - name: take
          required: false
          in: query
          example: 1
          schema:
            minimum: 1
            maximum: 50
            default: 10
            type: number
        - name: q
          required: false
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: PaginatedResponseOfExpenseDto
                allOf:
                  - $ref: '#/components/schemas/PaginatedMetaDto'
                  - properties:
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/ExpenseDto'
      tags: *ref_7
  /expenses/{id}:
    get:
      operationId: ExpensesController_findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseDto'
      tags: *ref_7
    patch:
      operationId: ExpensesController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateExpenseDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseDto'
      tags: *ref_7
    delete:
      operationId: ExpensesController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseDto'
      tags: *ref_7
info:
  title: Aqaratech API
  description: The Aqratech API description
  version: '1.0'
  contact: {}
tags:
  - name: aqaratech
    description: ''
servers:
  - url: http://localhost:3002
components:
  securitySchemes:
    oauth-swagger:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://dev-eehvhdp2.eu.auth0.com/authorize?audience=letand.be/api
          tokenUrl: https://dev-eehvhdp2.eu.auth0.com/oauth/token
          scopes:
            openid profile email: default scope
            openid: >-
              to indicate that the application intends to use OIDC to verify the
              user's identity
            profile: to get name, nickname, and picture
            email: to get email and email_verified
  schemas:
    TenantDto:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        createdAt:
          format: date-time
          type: string
          readOnly: true
        updatedAt:
          format: date-time
          type: string
          readOnly: true
        shortName:
          type: string
          nullable: true
          default: null
        civilid:
          type: string
          nullable: true
          default: null
        phone:
          type: string
          nullable: true
          default: null
        email:
          type: string
          nullable: true
          default: null
        dob:
          format: date-time
          type: string
          nullable: true
          default: null
        passportNum:
          type: string
          nullable: true
          default: null
        nationality:
          type: string
          nullable: true
          default: null
        residencyNum:
          type: string
          nullable: true
          default: null
        residencyEnd:
          format: date-time
          type: string
          nullable: true
          default: null
        organizationId:
          type: string
        fullName:
          type: string
          minLength: 1
          maxLength: 255
      required:
        - id
        - createdAt
        - updatedAt
        - organizationId
        - fullName
    PaginatedDto:
      type: object
      properties:
        page:
          type: number
        take:
          type: number
        itemCount:
          type: number
          description: Total number of items in the collection
        pageCount:
          type: number
        hasPreviousPage:
          type: boolean
        hasNextPage:
          type: boolean
      required:
        - page
        - take
        - itemCount
        - pageCount
        - hasPreviousPage
        - hasNextPage
    PaginatedMetaDto:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/PaginatedDto'
      required:
        - meta
    UpdateTenantDto:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        createdAt:
          format: date-time
          type: string
          readOnly: true
        updatedAt:
          format: date-time
          type: string
          readOnly: true
        shortName:
          type: string
          nullable: true
          default: null
        civilid:
          type: string
          nullable: true
          default: null
        phone:
          type: string
          nullable: true
          default: null
        email:
          type: string
          nullable: true
          default: null
        dob:
          format: date-time
          type: string
          nullable: true
          default: null
        passportNum:
          type: string
          nullable: true
          default: null
        nationality:
          type: string
          nullable: true
          default: null
        residencyNum:
          type: string
          nullable: true
          default: null
        residencyEnd:
          format: date-time
          type: string
          nullable: true
          default: null
        fullName:
          type: string
          minLength: 1
          maxLength: 255
    PortfolioDto:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        createdAt:
          format: date-time
          type: string
          readOnly: true
        updatedAt:
          format: date-time
          type: string
          readOnly: true
        shortName:
          type: string
          nullable: true
          default: null
        civilid:
          type: string
          nullable: true
          default: null
        phone:
          type: string
          nullable: true
          default: null
        email:
          type: string
          nullable: true
          default: null
        dob:
          format: date-time
          type: string
          nullable: true
          default: null
        organizationId:
          type: string
        fullName:
          type: string
          minLength: 1
          maxLength: 255
      required:
        - id
        - createdAt
        - updatedAt
        - organizationId
        - fullName
    UpdatePortfolioDto:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        createdAt:
          format: date-time
          type: string
          readOnly: true
        updatedAt:
          format: date-time
          type: string
          readOnly: true
        shortName:
          type: string
          nullable: true
          default: null
        civilid:
          type: string
          nullable: true
          default: null
        phone:
          type: string
          nullable: true
          default: null
        email:
          type: string
          nullable: true
          default: null
        dob:
          format: date-time
          type: string
          nullable: true
          default: null
        fullName:
          type: string
          minLength: 1
          maxLength: 255
    RoleDto:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        createdAt:
          format: date-time
          type: string
          readOnly: true
        updatedAt:
          format: date-time
          type: string
          readOnly: true
        permissions:
          type: object
        userId:
          type: string
          nullable: true
        organizationId:
          type: string
          nullable: true
        portfolioId:
          type: string
          nullable: true
        tenantId:
          type: string
          nullable: true
      required:
        - id
        - createdAt
        - updatedAt
        - permissions
        - userId
        - organizationId
        - portfolioId
        - tenantId
    UserDto:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        createdAt:
          format: date-time
          type: string
          readOnly: true
        updatedAt:
          format: date-time
          type: string
          readOnly: true
        fullName:
          type: string
          nullable: true
          default: null
        email:
          type: string
        roles:
          type: array
          items:
            $ref: '#/components/schemas/RoleDto'
      required:
        - id
        - createdAt
        - updatedAt
        - email
        - roles
    PropertyDto:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        createdAt:
          format: date-time
          type: string
          readOnly: true
        updatedAt:
          format: date-time
          type: string
          readOnly: true
        block:
          type: string
          nullable: true
          default: null
        avenue:
          type: string
          nullable: true
          default: null
        street:
          type: string
          nullable: true
          default: null
        number:
          type: string
          nullable: true
          default: null
        parcel:
          type: string
          nullable: true
          default: null
        paci:
          type: string
          nullable: true
          default: null
        cost:
          type: number
          nullable: true
          default: null
        portfolioId:
          type: string
        area:
          type: string
          nullable: true
          default: null
          minLength: 1
          maxLength: 255
      required:
        - id
        - createdAt
        - updatedAt
        - portfolioId
        - area
    UpdatePropertyDto:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        createdAt:
          format: date-time
          type: string
          readOnly: true
        updatedAt:
          format: date-time
          type: string
          readOnly: true
        block:
          type: string
          nullable: true
          default: null
        avenue:
          type: string
          nullable: true
          default: null
        street:
          type: string
          nullable: true
          default: null
        number:
          type: string
          nullable: true
          default: null
        parcel:
          type: string
          nullable: true
          default: null
        paci:
          type: string
          nullable: true
          default: null
        cost:
          type: number
          nullable: true
          default: null
        area:
          type: string
          nullable: true
          default: null
          minLength: 1
          maxLength: 255
    CreateUnitDto:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        createdAt:
          format: date-time
          type: string
          readOnly: true
        updatedAt:
          format: date-time
          type: string
          readOnly: true
        propertyId:
          type: string
        unitNumber:
          type: string
          minLength: 1
          maxLength: 255
        floor:
          type: number
          nullable: true
          default: null
        size:
          type: number
          nullable: true
          default: null
          minimum: 1
        bed:
          type: number
          nullable: true
          default: null
          minimum: 1
        bath:
          type: number
          nullable: true
          default: null
          minimum: 1
        marketRent:
          type: number
          nullable: true
          default: null
          minimum: 1
        type:
          type: string
          nullable: true
          default: null
        usage:
          type: string
          nullable: true
          default: null
      required:
        - id
        - createdAt
        - updatedAt
        - propertyId
        - unitNumber
    LeaseDto:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        createdAt:
          format: date-time
          type: string
          readOnly: true
        updatedAt:
          format: date-time
          type: string
          readOnly: true
        tenantId:
          type: string
        unitId:
          type: string
        start:
          format: date-time
          type: string
        end:
          format: date-time
          type: string
        monthlyRent:
          type: number
          minimum: 1
        deposit:
          type: object
          default: 0
        deactivated:
          type: object
          default: false
        notify:
          type: object
          default: true
        license:
          type: string
          nullable: true
          default: null
      required:
        - id
        - createdAt
        - updatedAt
        - tenantId
        - unitId
        - start
        - end
        - monthlyRent
        - deposit
        - deactivated
        - notify
        - license
    UnitDto:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        createdAt:
          format: date-time
          type: string
          readOnly: true
        updatedAt:
          format: date-time
          type: string
          readOnly: true
        leases:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/LeaseDto'
        propertyId:
          type: string
        unitNumber:
          type: string
          minLength: 1
          maxLength: 255
        floor:
          type: number
          nullable: true
          default: null
        size:
          type: number
          nullable: true
          default: null
          minimum: 1
        bed:
          type: number
          nullable: true
          default: null
          minimum: 1
        bath:
          type: number
          nullable: true
          default: null
          minimum: 1
        marketRent:
          type: number
          nullable: true
          default: null
          minimum: 1
        type:
          type: string
          nullable: true
          default: null
        usage:
          type: string
          nullable: true
          default: null
      required:
        - id
        - createdAt
        - updatedAt
        - propertyId
        - unitNumber
        - floor
        - size
        - bed
        - bath
        - marketRent
        - type
        - usage
    UpdateUnitDto:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        createdAt:
          format: date-time
          type: string
          readOnly: true
        updatedAt:
          format: date-time
          type: string
          readOnly: true
        unitNumber:
          type: string
          minLength: 1
          maxLength: 255
        floor:
          type: number
          nullable: true
          default: null
        size:
          type: number
          nullable: true
          default: null
          minimum: 1
        bed:
          type: number
          nullable: true
          default: null
          minimum: 1
        bath:
          type: number
          nullable: true
          default: null
          minimum: 1
        marketRent:
          type: number
          nullable: true
          default: null
          minimum: 1
        type:
          type: string
          nullable: true
          default: null
        usage:
          type: string
          nullable: true
          default: null
    UpdateLeaseDto:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        createdAt:
          format: date-time
          type: string
          readOnly: true
        updatedAt:
          format: date-time
          type: string
          readOnly: true
        start:
          format: date-time
          type: string
        end:
          format: date-time
          type: string
        monthlyRent:
          type: number
          minimum: 1
        deposit:
          type: object
          default: 0
        deactivated:
          type: object
          default: false
        notify:
          type: object
          default: true
        license:
          type: string
          nullable: true
          default: null
    LeaseInvoiceDto:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        createdAt:
          format: date-time
          type: string
          readOnly: true
        updatedAt:
          format: date-time
          type: string
          readOnly: true
        dueAt:
          format: date-time
          type: string
          nullable: true
          default: null
        paidAt:
          format: date-time
          type: string
          nullable: true
          default: null
        isPaid:
          type: boolean
          default: false
        memo:
          type: string
          nullable: true
          default: null
        amount:
          type: number
          minimum: 1
        postAt:
          format: date-time
          type: string
        leaseId:
          type: string
      required:
        - id
        - createdAt
        - updatedAt
        - amount
        - postAt
        - leaseId
    UpdateLeaseInvoiceDto:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        createdAt:
          format: date-time
          type: string
          readOnly: true
        updatedAt:
          format: date-time
          type: string
          readOnly: true
        dueAt:
          format: date-time
          type: string
          nullable: true
          default: null
        paidAt:
          format: date-time
          type: string
          nullable: true
          default: null
        isPaid:
          type: boolean
          default: false
        memo:
          type: string
          nullable: true
          default: null
        amount:
          type: number
          minimum: 1
        postAt:
          format: date-time
          type: string
    ExpenseDto:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        createdAt:
          format: date-time
          type: string
          readOnly: true
        updatedAt:
          format: date-time
          type: string
          readOnly: true
        unitId:
          type: string
          nullable: true
        propertyId:
          type: string
          nullable: true
        portfolioId:
          type: string
          nullable: true
        amount:
          type: number
          minimum: 1
        postAt:
          format: date-time
          type: string
        memo:
          type: string
          nullable: true
      required:
        - id
        - createdAt
        - updatedAt
        - amount
        - postAt
        - memo
    UpdateExpenseDto:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        createdAt:
          format: date-time
          type: string
          readOnly: true
        updatedAt:
          format: date-time
          type: string
          readOnly: true
        unitId:
          type: string
          nullable: true
        propertyId:
          type: string
          nullable: true
        portfolioId:
          type: string
          nullable: true
        amount:
          type: number
          minimum: 1
        postAt:
          format: date-time
          type: string
        memo:
          type: string
          nullable: true
security:
  - oauth-swagger: []
