openapi: 3.0.0
paths:
  /health:
    get:
      operationId: AppController_getHello
      summary: ''
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: string
      security:
        - bearer: []
  /tenants:
    post:
      operationId: TenantsController_create
      summary: ''
      description: ''
      parameters:
        - &ref_0
          name: x-role-id
          in: header
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTenantDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantDto'
      tags: &ref_1
        - tenants
      security: &ref_2
        - bearer: []
    get:
      operationId: TenantsController_findAll
      summary: ''
      description: ''
      parameters:
        - *ref_0
        - name: page
          required: false
          in: query
          schema:
            minimum: 1
            default: 1
            type: number
        - name: take
          required: false
          in: query
          schema:
            minimum: 1
            default: 20
            type: number
        - name: orderBy
          required: false
          in: query
          schema:
            $ref: '#/components/schemas/CombinedEnum'
        - name: sortOrder
          required: false
          in: query
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - name: filter
          required: false
          in: query
          schema:
            type: object
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: PaginatedTenantDto
                required:
                  - results
                allOf:
                  - $ref: '#/components/schemas/PaginatedMetaDto'
                  - title: ArrayOfTenantDto
                    properties:
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/TenantDto'
      tags: *ref_1
      security: *ref_2
  /tenants/{id}:
    get:
      operationId: TenantsController_findOne
      summary: ''
      description: ''
      parameters:
        - *ref_0
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantDto'
      tags: *ref_1
      security: *ref_2
    patch:
      operationId: TenantsController_update
      summary: ''
      description: ''
      parameters:
        - *ref_0
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTenantDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantDto'
      tags: *ref_1
      security: *ref_2
    delete:
      operationId: TenantsController_remove
      summary: ''
      description: ''
      parameters:
        - *ref_0
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: string
      tags: *ref_1
      security: *ref_2
  /tenants/{id}/leases:
    get:
      operationId: TenantsController_findLeases
      summary: ''
      description: ''
      parameters:
        - *ref_0
        - name: page
          required: false
          in: query
          schema:
            minimum: 1
            default: 1
            type: number
        - name: take
          required: false
          in: query
          schema:
            minimum: 1
            default: 20
            type: number
        - name: orderBy
          required: false
          in: query
          schema:
            $ref: '#/components/schemas/CombinedEnum'
        - name: sortOrder
          required: false
          in: query
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - name: filter
          required: false
          in: query
          schema:
            type: object
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: PaginatedLeaseDto
                required:
                  - results
                allOf:
                  - $ref: '#/components/schemas/PaginatedMetaDto'
                  - title: ArrayOfLeaseDto
                    properties:
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/LeaseDto'
      tags: *ref_1
      security: *ref_2
  /tenants/{id}/invoices:
    get:
      operationId: TenantsController_findInvoices
      summary: ''
      description: ''
      parameters:
        - *ref_0
        - name: page
          required: false
          in: query
          schema:
            minimum: 1
            default: 1
            type: number
        - name: take
          required: false
          in: query
          schema:
            minimum: 1
            default: 20
            type: number
        - name: orderBy
          required: false
          in: query
          schema:
            $ref: '#/components/schemas/CombinedEnum'
        - name: sortOrder
          required: false
          in: query
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - name: filter
          required: false
          in: query
          schema:
            type: object
        - name: start
          required: false
          in: query
          schema:
            type: string
        - name: end
          required: false
          in: query
          schema:
            type: string
        - name: paidStatus
          required: false
          in: query
          schema:
            $ref: '#/components/schemas/PaidStatusEnum'
        - name: portfolioId
          required: false
          in: query
          schema:
            type: string
        - name: propertyId
          required: false
          in: query
          schema:
            type: string
        - name: unitId
          required: false
          in: query
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: PaginatedLeaseInvoiceDto
                required:
                  - results
                allOf:
                  - $ref: '#/components/schemas/PaginatedMetaDto'
                  - title: ArrayOfLeaseInvoiceDto
                    properties:
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/LeaseInvoiceDto'
      tags: *ref_1
      security: *ref_2
  /tenants/{id}/roles:
    get:
      operationId: TenantsController_findRoles
      summary: ''
      description: ''
      parameters:
        - *ref_0
        - name: page
          required: false
          in: query
          schema:
            minimum: 1
            default: 1
            type: number
        - name: take
          required: false
          in: query
          schema:
            minimum: 1
            default: 20
            type: number
        - name: orderBy
          required: false
          in: query
          schema:
            $ref: '#/components/schemas/CombinedEnum'
        - name: sortOrder
          required: false
          in: query
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - name: filter
          required: false
          in: query
          schema:
            type: object
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: PaginatedRoleDto
                required:
                  - results
                allOf:
                  - $ref: '#/components/schemas/PaginatedMetaDto'
                  - title: ArrayOfRoleDto
                    properties:
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/RoleDto'
      tags: *ref_1
      security: *ref_2
  /roles:
    post:
      operationId: RolesController_create
      summary: ''
      description: ''
      parameters:
        - &ref_3
          name: x-role-id
          in: header
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRoleDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDto'
      tags: &ref_4
        - roles
  /roles/{id}:
    delete:
      operationId: RolesController_remove
      summary: ''
      description: ''
      parameters:
        - *ref_3
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: string
      tags: *ref_4
  /roles/{id}/send-invite:
    post:
      operationId: RolesController_sendInvite
      summary: ''
      description: ''
      parameters:
        - *ref_3
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: ''
      tags: *ref_4
  /leaseInvoices:
    post:
      operationId: LeaseInvoicesController_create
      summary: ''
      description: ''
      parameters:
        - &ref_5
          name: x-role-id
          in: header
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLeaseInvoiceDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartialLeaseInvoiceDto'
      tags: &ref_6
        - leaseInvoices
      security: &ref_7
        - bearer: []
    get:
      operationId: LeaseInvoicesController_findAll
      summary: ''
      description: ''
      parameters:
        - *ref_5
        - name: page
          required: false
          in: query
          schema:
            minimum: 1
            default: 1
            type: number
        - name: take
          required: false
          in: query
          schema:
            minimum: 1
            default: 20
            type: number
        - name: orderBy
          required: false
          in: query
          schema:
            $ref: '#/components/schemas/CombinedEnum'
        - name: sortOrder
          required: false
          in: query
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - name: filter
          required: false
          in: query
          schema:
            type: object
        - name: start
          required: false
          in: query
          schema:
            type: string
        - name: end
          required: false
          in: query
          schema:
            type: string
        - name: paidStatus
          required: false
          in: query
          schema:
            $ref: '#/components/schemas/PaidStatusEnum'
        - name: portfolioId
          required: false
          in: query
          schema:
            type: string
        - name: propertyId
          required: false
          in: query
          schema:
            type: string
        - name: unitId
          required: false
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: PaginatedLeaseInvoiceDto
                required:
                  - results
                allOf:
                  - $ref: '#/components/schemas/PaginatedMetaDto'
                  - title: ArrayOfLeaseInvoiceDto
                    properties:
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/LeaseInvoiceDto'
      tags: *ref_6
      security: *ref_7
  /leaseInvoices/{id}:
    get:
      operationId: LeaseInvoicesController_findOne
      summary: ''
      description: ''
      parameters:
        - *ref_5
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaseInvoiceDto'
      tags: *ref_6
      security: *ref_7
    patch:
      operationId: LeaseInvoicesController_update
      summary: ''
      description: ''
      parameters:
        - *ref_5
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLeaseInvoiceDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartialLeaseInvoiceDto'
      tags: *ref_6
      security: *ref_7
    delete:
      operationId: LeaseInvoicesController_remove
      summary: ''
      description: ''
      parameters:
        - *ref_5
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: string
      tags: *ref_6
      security: *ref_7
  /leaseInvoices/{id}/send-email:
    post:
      operationId: LeaseInvoicesController_sendEmail
      summary: ''
      description: ''
      parameters:
        - *ref_5
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: string
      tags: *ref_6
      security: *ref_7
  /leases:
    post:
      operationId: LeasesController_create
      summary: ''
      description: ''
      parameters:
        - &ref_8
          name: x-role-id
          in: header
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLeaseDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartialLeaseDto'
      tags: &ref_9
        - leases
      security: &ref_10
        - bearer: []
    get:
      operationId: LeasesController_findAll
      summary: ''
      description: ''
      parameters:
        - *ref_8
        - name: page
          required: false
          in: query
          schema:
            minimum: 1
            default: 1
            type: number
        - name: take
          required: false
          in: query
          schema:
            minimum: 1
            default: 20
            type: number
        - name: orderBy
          required: false
          in: query
          schema:
            $ref: '#/components/schemas/CombinedEnum'
        - name: sortOrder
          required: false
          in: query
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - name: filter
          required: false
          in: query
          schema:
            type: object
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: PaginatedLeaseDto
                required:
                  - results
                allOf:
                  - $ref: '#/components/schemas/PaginatedMetaDto'
                  - title: ArrayOfLeaseDto
                    properties:
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/LeaseDto'
      tags: *ref_9
      security: *ref_10
  /leases/{id}:
    get:
      operationId: LeasesController_findOne
      summary: ''
      description: ''
      parameters:
        - *ref_8
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaseDto'
      tags: *ref_9
      security: *ref_10
    patch:
      operationId: LeasesController_update
      summary: ''
      description: ''
      parameters:
        - *ref_8
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLeaseDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartialLeaseDto'
      tags: *ref_9
      security: *ref_10
    delete:
      operationId: LeasesController_remove
      summary: ''
      description: ''
      parameters:
        - *ref_8
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: string
      tags: *ref_9
      security: *ref_10
  /leases/{id}/invoices:
    get:
      operationId: LeasesController_findInvoices
      summary: ''
      description: ''
      parameters:
        - *ref_8
        - name: id
          required: true
          in: path
          schema:
            type: string
        - name: page
          required: false
          in: query
          schema:
            minimum: 1
            default: 1
            type: number
        - name: take
          required: false
          in: query
          schema:
            minimum: 1
            default: 20
            type: number
        - name: orderBy
          required: false
          in: query
          schema:
            $ref: '#/components/schemas/CombinedEnum'
        - name: sortOrder
          required: false
          in: query
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - name: filter
          required: false
          in: query
          schema:
            type: object
        - name: start
          required: false
          in: query
          schema:
            type: string
        - name: end
          required: false
          in: query
          schema:
            type: string
        - name: paidStatus
          required: false
          in: query
          schema:
            $ref: '#/components/schemas/PaidStatusEnum'
        - name: portfolioId
          required: false
          in: query
          schema:
            type: string
        - name: propertyId
          required: false
          in: query
          schema:
            type: string
        - name: unitId
          required: false
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: PaginatedLeaseInvoiceDto
                required:
                  - results
                allOf:
                  - $ref: '#/components/schemas/PaginatedMetaDto'
                  - title: ArrayOfLeaseInvoiceDto
                    properties:
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/LeaseInvoiceDto'
      tags: *ref_9
      security: *ref_10
    post:
      operationId: LeasesController_createInvoices
      summary: ''
      description: ''
      parameters:
        - *ref_8
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CreateManyLeaseInvoicesDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: string
      tags: *ref_9
      security: *ref_10
  /portfolios:
    post:
      operationId: PortfoliosController_create
      summary: ''
      description: ''
      parameters:
        - &ref_11
          name: x-role-id
          in: header
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePortfolioDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortfolioDto'
      tags: &ref_12
        - portfolios
      security: &ref_13
        - bearer: []
    get:
      operationId: PortfoliosController_findAll
      summary: ''
      description: ''
      parameters:
        - *ref_11
        - name: page
          required: false
          in: query
          schema:
            minimum: 1
            default: 1
            type: number
        - name: take
          required: false
          in: query
          schema:
            minimum: 1
            default: 20
            type: number
        - name: orderBy
          required: false
          in: query
          schema:
            $ref: '#/components/schemas/CombinedEnum'
        - name: sortOrder
          required: false
          in: query
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - name: filter
          required: false
          in: query
          schema:
            type: object
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: PaginatedPortfolioDto
                required:
                  - results
                allOf:
                  - $ref: '#/components/schemas/PaginatedMetaDto'
                  - title: ArrayOfPortfolioDto
                    properties:
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/PortfolioDto'
      tags: *ref_12
      security: *ref_13
  /portfolios/{id}:
    get:
      operationId: PortfoliosController_findOne
      summary: ''
      description: ''
      parameters:
        - *ref_11
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortfolioDto'
      tags: *ref_12
      security: *ref_13
    patch:
      operationId: PortfoliosController_update
      summary: ''
      description: ''
      parameters:
        - *ref_11
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePortfolioDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortfolioDto'
      tags: *ref_12
      security: *ref_13
    delete:
      operationId: PortfoliosController_remove
      summary: ''
      description: ''
      parameters:
        - *ref_11
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortfolioDto'
      tags: *ref_12
      security: *ref_13
  /portfolios/{id}/roles:
    get:
      operationId: PortfoliosController_findRoles
      summary: ''
      description: ''
      parameters:
        - *ref_11
        - name: page
          required: false
          in: query
          schema:
            minimum: 1
            default: 1
            type: number
        - name: take
          required: false
          in: query
          schema:
            minimum: 1
            default: 20
            type: number
        - name: orderBy
          required: false
          in: query
          schema:
            $ref: '#/components/schemas/CombinedEnum'
        - name: sortOrder
          required: false
          in: query
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - name: filter
          required: false
          in: query
          schema:
            type: object
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: PaginatedRoleDto
                required:
                  - results
                allOf:
                  - $ref: '#/components/schemas/PaginatedMetaDto'
                  - title: ArrayOfRoleDto
                    properties:
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/RoleDto'
      tags: *ref_12
      security: *ref_13
  /portfolios/{id}/properties:
    get:
      operationId: PortfoliosController_findProperties
      summary: ''
      description: ''
      parameters:
        - *ref_11
        - name: page
          required: false
          in: query
          schema:
            minimum: 1
            default: 1
            type: number
        - name: take
          required: false
          in: query
          schema:
            minimum: 1
            default: 20
            type: number
        - name: orderBy
          required: false
          in: query
          schema:
            $ref: '#/components/schemas/CombinedEnum'
        - name: sortOrder
          required: false
          in: query
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - name: filter
          required: false
          in: query
          schema:
            type: object
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: PaginatedPropertyDto
                required:
                  - results
                allOf:
                  - $ref: '#/components/schemas/PaginatedMetaDto'
                  - title: ArrayOfPropertyDto
                    properties:
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/PropertyDto'
      tags: *ref_12
      security: *ref_13
  /portfolios/{id}/units:
    get:
      operationId: PortfoliosController_findUnits
      summary: ''
      description: ''
      parameters:
        - *ref_11
        - name: page
          required: false
          in: query
          schema:
            minimum: 1
            default: 1
            type: number
        - name: take
          required: false
          in: query
          schema:
            minimum: 1
            default: 20
            type: number
        - name: orderBy
          required: false
          in: query
          schema:
            $ref: '#/components/schemas/CombinedEnum'
        - name: sortOrder
          required: false
          in: query
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - name: filter
          required: false
          in: query
          schema:
            type: object
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: PaginatedUnitDto
                required:
                  - results
                allOf:
                  - $ref: '#/components/schemas/PaginatedMetaDto'
                  - title: ArrayOfUnitDto
                    properties:
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/UnitDto'
      tags: *ref_12
      security: *ref_13
  /portfolios/{id}/payouts:
    get:
      operationId: PortfoliosController_findPayouts
      summary: ''
      description: ''
      parameters:
        - *ref_11
        - name: page
          required: false
          in: query
          schema:
            minimum: 1
            default: 1
            type: number
        - name: take
          required: false
          in: query
          schema:
            minimum: 1
            default: 20
            type: number
        - name: orderBy
          required: false
          in: query
          schema:
            $ref: '#/components/schemas/CombinedEnum'
        - name: sortOrder
          required: false
          in: query
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - name: filter
          required: false
          in: query
          schema:
            type: object
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: PaginatedPayoutDto
                required:
                  - results
                allOf:
                  - $ref: '#/components/schemas/PaginatedMetaDto'
                  - title: ArrayOfPayoutDto
                    properties:
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/PayoutDto'
      tags: *ref_12
      security: *ref_13
  /portfolios/{id}/balance:
    get:
      operationId: PortfoliosController_getBalance
      summary: ''
      description: ''
      parameters:
        - *ref_11
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BalanceDto'
      tags: *ref_12
      security: *ref_13
  /properties:
    post:
      operationId: PropertiesController_create
      summary: ''
      description: ''
      parameters:
        - &ref_14
          name: x-role-id
          in: header
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePropertyDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyDto'
      tags: &ref_15
        - properties
      security: &ref_16
        - bearer: []
    get:
      operationId: PropertiesController_findAll
      summary: ''
      description: ''
      parameters:
        - *ref_14
        - name: page
          required: false
          in: query
          schema:
            minimum: 1
            default: 1
            type: number
        - name: take
          required: false
          in: query
          schema:
            minimum: 1
            default: 20
            type: number
        - name: orderBy
          required: false
          in: query
          schema:
            $ref: '#/components/schemas/CombinedEnum'
        - name: sortOrder
          required: false
          in: query
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - name: filter
          required: false
          in: query
          schema:
            type: object
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: PaginatedPropertyDto
                required:
                  - results
                allOf:
                  - $ref: '#/components/schemas/PaginatedMetaDto'
                  - title: ArrayOfPropertyDto
                    properties:
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/PropertyDto'
      tags: *ref_15
      security: *ref_16
  /properties/{id}:
    get:
      operationId: PropertiesController_findOne
      summary: ''
      description: ''
      parameters:
        - *ref_14
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyDto'
      tags: *ref_15
      security: *ref_16
    patch:
      operationId: PropertiesController_update
      summary: ''
      description: ''
      parameters:
        - *ref_14
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePropertyDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyDto'
      tags: *ref_15
      security: *ref_16
    delete:
      operationId: PropertiesController_remove
      summary: ''
      description: ''
      parameters:
        - *ref_14
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: string
      tags: *ref_15
      security: *ref_16
  /properties/{id}/units:
    get:
      operationId: PropertiesController_findUnits
      summary: ''
      description: ''
      parameters:
        - *ref_14
        - name: page
          required: false
          in: query
          schema:
            minimum: 1
            default: 1
            type: number
        - name: take
          required: false
          in: query
          schema:
            minimum: 1
            default: 20
            type: number
        - name: orderBy
          required: false
          in: query
          schema:
            $ref: '#/components/schemas/CombinedEnum'
        - name: sortOrder
          required: false
          in: query
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - name: filter
          required: false
          in: query
          schema:
            type: object
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: PaginatedUnitDto
                required:
                  - results
                allOf:
                  - $ref: '#/components/schemas/PaginatedMetaDto'
                  - title: ArrayOfUnitDto
                    properties:
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/UnitDto'
      tags: *ref_15
      security: *ref_16
  /units:
    post:
      operationId: UnitsController_create
      summary: ''
      description: ''
      parameters:
        - &ref_17
          name: x-role-id
          in: header
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUnitDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartialUnitDto'
      tags: &ref_18
        - units
      security: &ref_19
        - bearer: []
    get:
      operationId: UnitsController_findAll
      summary: ''
      description: ''
      parameters:
        - *ref_17
        - name: page
          required: false
          in: query
          schema:
            minimum: 1
            default: 1
            type: number
        - name: take
          required: false
          in: query
          schema:
            minimum: 1
            default: 20
            type: number
        - name: orderBy
          required: false
          in: query
          schema:
            $ref: '#/components/schemas/CombinedEnum'
        - name: sortOrder
          required: false
          in: query
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - name: filter
          required: false
          in: query
          schema:
            type: object
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: PaginatedUnitDto
                required:
                  - results
                allOf:
                  - $ref: '#/components/schemas/PaginatedMetaDto'
                  - title: ArrayOfUnitDto
                    properties:
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/UnitDto'
      tags: *ref_18
      security: *ref_19
  /units/{id}:
    get:
      operationId: UnitsController_findOne
      summary: ''
      description: ''
      parameters:
        - *ref_17
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitDto'
      tags: *ref_18
      security: *ref_19
    patch:
      operationId: UnitsController_update
      summary: ''
      description: ''
      parameters:
        - *ref_17
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUnitDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartialUnitDto'
      tags: *ref_18
      security: *ref_19
    delete:
      operationId: UnitsController_remove
      summary: ''
      description: ''
      parameters:
        - *ref_17
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: string
      tags: *ref_18
      security: *ref_19
  /units/{id}/leases:
    get:
      operationId: UnitsController_findLeases
      summary: ''
      description: ''
      parameters:
        - *ref_17
        - name: page
          required: false
          in: query
          schema:
            minimum: 1
            default: 1
            type: number
        - name: take
          required: false
          in: query
          schema:
            minimum: 1
            default: 20
            type: number
        - name: orderBy
          required: false
          in: query
          schema:
            $ref: '#/components/schemas/CombinedEnum'
        - name: sortOrder
          required: false
          in: query
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - name: filter
          required: false
          in: query
          schema:
            type: object
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: PaginatedLeaseDto
                required:
                  - results
                allOf:
                  - $ref: '#/components/schemas/PaginatedMetaDto'
                  - title: ArrayOfLeaseDto
                    properties:
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/LeaseDto'
      tags: *ref_18
      security: *ref_19
  /payouts:
    post:
      operationId: PayoutsController_create
      summary: ''
      description: ''
      parameters:
        - &ref_20
          name: x-role-id
          in: header
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePayoutDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayoutDto'
      tags: &ref_21
        - payouts
      security: &ref_22
        - bearer: []
    get:
      operationId: PayoutsController_findAll
      summary: ''
      description: ''
      parameters:
        - *ref_20
        - name: page
          required: false
          in: query
          schema:
            minimum: 1
            default: 1
            type: number
        - name: take
          required: false
          in: query
          schema:
            minimum: 1
            default: 20
            type: number
        - name: orderBy
          required: false
          in: query
          schema:
            $ref: '#/components/schemas/CombinedEnum'
        - name: sortOrder
          required: false
          in: query
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - name: filter
          required: false
          in: query
          schema:
            type: object
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: PaginatedPayoutDto
                required:
                  - results
                allOf:
                  - $ref: '#/components/schemas/PaginatedMetaDto'
                  - title: ArrayOfPayoutDto
                    properties:
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/PayoutDto'
      tags: *ref_21
      security: *ref_22
  /payouts/{id}:
    get:
      operationId: PayoutsController_findOne
      summary: ''
      description: ''
      parameters:
        - *ref_20
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayoutDto'
      tags: *ref_21
      security: *ref_22
    patch:
      operationId: PayoutsController_update
      summary: ''
      description: ''
      parameters:
        - *ref_20
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePayoutDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayoutDto'
      tags: *ref_21
      security: *ref_22
    delete:
      operationId: PayoutsController_remove
      summary: ''
      description: ''
      parameters:
        - *ref_20
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: string
      tags: *ref_21
      security: *ref_22
  /aggregate/incomeByMonth:
    get:
      operationId: AggregateController_getIncomeByMonth
      summary: ''
      description: ''
      parameters:
        - &ref_23
          name: x-role-id
          in: header
          schema:
            type: string
        - name: page
          required: false
          in: query
          schema:
            minimum: 1
            default: 1
            type: number
        - name: take
          required: false
          in: query
          schema:
            minimum: 1
            default: 20
            type: number
        - name: orderBy
          required: false
          in: query
          schema:
            $ref: '#/components/schemas/CombinedEnum'
        - name: sortOrder
          required: false
          in: query
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - name: filter
          required: false
          in: query
          schema:
            type: object
        - name: start
          required: false
          in: query
          schema:
            type: string
        - name: end
          required: false
          in: query
          schema:
            type: string
        - name: paidStatus
          required: false
          in: query
          schema:
            $ref: '#/components/schemas/PaidStatusEnum'
        - name: portfolioId
          required: false
          in: query
          schema:
            type: string
        - name: propertyId
          required: false
          in: query
          schema:
            type: string
        - name: unitId
          required: false
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ByMonthDto'
      tags: &ref_24
        - aggregate
  /aggregate/expensesByMonth:
    get:
      operationId: AggregateController_getExpensesByMonth
      summary: ''
      description: ''
      parameters:
        - *ref_23
        - name: start
          required: false
          in: query
          schema:
            type: string
        - name: end
          required: false
          in: query
          schema:
            type: string
        - name: portfolioId
          required: false
          in: query
          schema:
            type: string
        - name: propertyId
          required: false
          in: query
          schema:
            type: string
        - name: unitId
          required: false
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ByMonthDto'
      tags: *ref_24
  /aggregate/occupancy:
    get:
      operationId: AggregateController_getOccupancy
      summary: ''
      description: ''
      parameters:
        - *ref_23
        - name: start
          required: false
          in: query
          schema:
            type: string
        - name: end
          required: false
          in: query
          schema:
            type: string
        - name: portfolioId
          required: false
          in: query
          schema:
            type: string
        - name: propertyId
          required: false
          in: query
          schema:
            type: string
        - name: unitId
          required: false
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Occupancy'
      tags: *ref_24
  /users/me:
    get:
      operationId: UsersController_findProfile
      summary: ''
      description: ''
      parameters:
        - name: x-role-id
          in: header
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidatedUserDto'
        '404':
          description: ''
      tags:
        - users
      security:
        - bearer: []
  /expenses:
    post:
      operationId: ExpensesController_create
      summary: ''
      description: ''
      parameters:
        - &ref_25
          name: x-role-id
          in: header
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateExpenseDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartialExpenseDto'
      tags: &ref_26
        - expenses
      security: &ref_27
        - bearer: []
    get:
      operationId: ExpensesController_findAll
      summary: ''
      description: ''
      parameters:
        - *ref_25
        - name: page
          required: false
          in: query
          schema:
            minimum: 1
            default: 1
            type: number
        - name: take
          required: false
          in: query
          schema:
            minimum: 1
            default: 20
            type: number
        - name: orderBy
          required: false
          in: query
          schema:
            $ref: '#/components/schemas/CombinedEnum'
        - name: sortOrder
          required: false
          in: query
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - name: filter
          required: false
          in: query
          schema:
            type: object
        - name: start
          required: false
          in: query
          schema:
            type: string
        - name: end
          required: false
          in: query
          schema:
            type: string
        - name: portfolioId
          required: false
          in: query
          schema:
            type: string
        - name: propertyId
          required: false
          in: query
          schema:
            type: string
        - name: unitId
          required: false
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: PaginatedExpenseDto
                required:
                  - results
                allOf:
                  - $ref: '#/components/schemas/PaginatedMetaDto'
                  - title: ArrayOfExpenseDto
                    properties:
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/ExpenseDto'
      tags: *ref_26
      security: *ref_27
  /expenses/{id}:
    get:
      operationId: ExpensesController_findOne
      summary: ''
      description: ''
      parameters:
        - *ref_25
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseDto'
      tags: *ref_26
      security: *ref_27
    patch:
      operationId: ExpensesController_update
      summary: ''
      description: ''
      parameters:
        - *ref_25
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateExpenseDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartialExpenseDto'
      tags: *ref_26
      security: *ref_27
    delete:
      operationId: ExpensesController_remove
      summary: ''
      description: ''
      parameters:
        - *ref_25
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: string
      tags: *ref_26
      security: *ref_27
  /search:
    post:
      operationId: SearchController_reindexAll
      summary: ''
      description: ''
      parameters:
        - &ref_28
          name: x-role-id
          in: header
          schema:
            type: string
      responses:
        '201':
          description: ''
      tags: &ref_29
        - search
    delete:
      operationId: SearchController_remove
      summary: ''
      description: ''
      parameters:
        - *ref_28
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
      tags: *ref_29
  /organizations:
    post:
      operationId: OrganizationsController_create
      summary: ''
      description: ''
      parameters:
        - &ref_30
          name: x-role-id
          in: header
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrganizationDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationCreatedDto'
      tags: &ref_31
        - organizations
      security: &ref_32
        - bearer: []
    get:
      operationId: OrganizationsController_findAll
      summary: ''
      description: ''
      parameters:
        - *ref_30
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: PaginatedOrganizationDto
                required:
                  - results
                allOf:
                  - $ref: '#/components/schemas/PaginatedMetaDto'
                  - title: ArrayOfOrganizationDto
                    properties:
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/OrganizationDto'
      tags: *ref_31
      security: *ref_32
  /organizations/{id}:
    get:
      operationId: OrganizationsController_findOne
      summary: ''
      description: ''
      parameters:
        - *ref_30
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationDto'
      tags: *ref_31
      security: *ref_32
    patch:
      operationId: OrganizationsController_update
      summary: ''
      description: ''
      parameters:
        - *ref_30
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrganizationDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: string
      tags: *ref_31
      security: *ref_32
    delete:
      operationId: OrganizationsController_remove
      summary: ''
      description: ''
      parameters:
        - *ref_30
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationDto'
      tags: *ref_31
      security: *ref_32
  /organizations/{id}/roles:
    get:
      operationId: OrganizationsController_findRoles
      summary: ''
      description: ''
      parameters:
        - *ref_30
        - name: page
          required: false
          in: query
          schema:
            minimum: 1
            default: 1
            type: number
        - name: take
          required: false
          in: query
          schema:
            minimum: 1
            default: 20
            type: number
        - name: orderBy
          required: false
          in: query
          schema:
            $ref: '#/components/schemas/CombinedEnum'
        - name: sortOrder
          required: false
          in: query
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - name: filter
          required: false
          in: query
          schema:
            type: object
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: PaginatedRoleDto
                required:
                  - results
                allOf:
                  - $ref: '#/components/schemas/PaginatedMetaDto'
                  - title: ArrayOfRoleDto
                    properties:
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/RoleDto'
      tags: *ref_31
      security: *ref_32
  /organizations/{id}/search:
    get:
      operationId: OrganizationsController_search
      summary: ''
      description: ''
      parameters:
        - *ref_30
        - name: id
          required: true
          in: path
          schema:
            type: string
        - name: query
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SearchDto'
      tags: *ref_31
      security: *ref_32
  /expense-categories:
    post:
      operationId: ExpenseCategoriesController_create
      summary: ''
      description: ''
      parameters:
        - &ref_33
          name: x-role-id
          in: header
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateExpenseCategoryDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: string
      tags: &ref_34
        - expense-categories
      security: &ref_35
        - bearer: []
    get:
      operationId: ExpenseCategoriesController_findAll
      summary: ''
      description: ''
      parameters:
        - *ref_33
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExpenseCategoryDto'
      tags: *ref_34
      security: *ref_35
    patch:
      operationId: ExpenseCategoriesController_updateAll
      summary: ''
      description: ''
      parameters:
        - *ref_33
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAllExpenseCategoriesDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExpenseCategoryDto'
      tags: *ref_34
      security: *ref_35
  /expense-categories/{id}:
    patch:
      operationId: ExpenseCategoriesController_update
      summary: ''
      description: ''
      parameters:
        - *ref_33
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateExpenseCategoryDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: string
      tags: *ref_34
      security: *ref_35
  /files:
    post:
      operationId: FilesController_create
      summary: ''
      description: ''
      parameters:
        - &ref_36
          name: x-role-id
          in: header
          schema:
            type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              allOf:
                - $ref: '#/components/schemas/CreateFileDto'
                - properties:
                    file:
                      type: string
                      format: binary
              $ref: '#/components/schemas/CreateFileDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: string
      tags: &ref_37
        - files
      security: &ref_38
        - bearer: []
    get:
      operationId: FilesController_findAll
      summary: ''
      description: ''
      parameters:
        - *ref_36
        - name: relationKey
          required: true
          in: query
          schema:
            enum:
              - tenant
              - portfolio
              - property
              - unit
              - expense
              - lease
              - leaseInvoice
              - maintenanceOrder
            type: string
        - name: relationValue
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: PaginatedFileDto
                required:
                  - results
                allOf:
                  - $ref: '#/components/schemas/PaginatedMetaDto'
                  - title: ArrayOfFileDto
                    properties:
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/FileDto'
      tags: *ref_37
      security: *ref_38
    delete:
      operationId: FilesController_remove
      summary: ''
      description: ''
      parameters:
        - *ref_36
        - name: key
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: string
      tags: *ref_37
      security: *ref_38
  /files/find-one:
    get:
      operationId: FilesController_findOne
      summary: ''
      description: ''
      parameters:
        - *ref_36
        - name: key
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: string
      tags: *ref_37
      security: *ref_38
info:
  title: Aqaratech
  description: Aqaratech API
  version: '1.0'
  contact: {}
tags: []
servers: []
components:
  securitySchemes:
    bearer:
      scheme: Bearer
      bearerFormat: JWT
      type: http
      name: JWT
      description: Enter JWT token
      in: header
  schemas:
    CreateTenantDto:
      type: object
      properties:
        dob:
          type: string
          nullable: true
        residencyEnd:
          type: string
          nullable: true
        organizationId:
          type: string
        fullName:
          type: string
          minLength: 1
          maxLength: 255
        label:
          type: string
          nullable: true
        civilid:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        passportNum:
          type: string
          nullable: true
        nationality:
          type: string
          nullable: true
        residencyNum:
          type: string
          nullable: true
      required:
        - organizationId
        - fullName
    TenantDto:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        createdAt:
          type: string
          readOnly: true
        updatedAt:
          type: string
          readOnly: true
        dob:
          type: string
          nullable: true
        residencyEnd:
          type: string
          nullable: true
        title:
          type: string
        organizationId:
          type: string
        fullName:
          type: string
          minLength: 1
          maxLength: 255
        label:
          type: string
          nullable: true
        civilid:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        passportNum:
          type: string
          nullable: true
        nationality:
          type: string
          nullable: true
        residencyNum:
          type: string
          nullable: true
      required:
        - id
        - createdAt
        - updatedAt
        - dob
        - residencyEnd
        - title
        - organizationId
        - fullName
        - label
        - civilid
        - phone
        - passportNum
        - nationality
        - residencyNum
    CombinedEnum:
      type: string
      enum:
        - id
        - createdAt
        - updatedAt
        - fullName
        - label
        - civilid
        - dob
        - phone
        - passportNum
        - nationality
        - residencyNum
        - residencyEnd
        - organizationId
        - portfolioId
        - area
        - block
        - avenue
        - street
        - number
        - parcel
        - paci
        - cost
        - long
        - lat
        - propertyId
        - unitNumber
        - floor
        - size
        - bed
        - bath
        - marketRent
        - type
        - usage
        - tenantId
        - unitId
        - start
        - end
        - monthlyRent
        - deposit
        - canPay
        - notify
        - license
        - dueAt
        - postAt
        - paidAt
        - isPaid
        - amount
        - memo
        - mfPaymentId
        - leaseId
        - maintenanceOrderId
        - categoryId
        - completedAt
        - title
        - description
        - status
    SortOrderEnum:
      type: string
      enum:
        - asc
        - desc
    UpdateTenantDto:
      type: object
      properties:
        dob:
          type: string
          nullable: true
        residencyEnd:
          type: string
          nullable: true
        organizationId:
          type: string
        fullName:
          type: string
          minLength: 1
          maxLength: 255
        label:
          type: string
          nullable: true
        civilid:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        passportNum:
          type: string
          nullable: true
        nationality:
          type: string
          nullable: true
        residencyNum:
          type: string
          nullable: true
    BreadcrumbDto:
      type: object
      properties:
        id:
          type: string
        label:
          type: string
      required:
        - id
        - label
    LeaseBreadcrumbsDto:
      type: object
      properties:
        portfolio:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/BreadcrumbDto'
        property:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/BreadcrumbDto'
        unit:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/BreadcrumbDto'
        tenant:
          $ref: '#/components/schemas/BreadcrumbDto'
      required:
        - portfolio
        - property
        - unit
        - tenant
    LeaseDto:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        createdAt:
          type: string
          readOnly: true
        updatedAt:
          type: string
          readOnly: true
        start:
          type: string
        end:
          type: string
        breadcrumbs:
          $ref: '#/components/schemas/LeaseBreadcrumbsDto'
        organizationId:
          type: string
        portfolioId:
          type: string
        tenantId:
          type: string
        unitId:
          type: string
        monthlyRent:
          type: number
          minimum: 1
        deposit:
          type: number
        canPay:
          type: boolean
        notify:
          type: boolean
        license:
          type: string
          nullable: true
      required:
        - id
        - createdAt
        - updatedAt
        - start
        - end
        - breadcrumbs
        - organizationId
        - portfolioId
        - tenantId
        - unitId
        - monthlyRent
        - deposit
        - canPay
        - notify
        - license
    LeaseInvoiceBreadcrumbsDto:
      type: object
      properties:
        portfolio:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/BreadcrumbDto'
        property:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/BreadcrumbDto'
        unit:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/BreadcrumbDto'
        lease:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/BreadcrumbDto'
        tenant:
          $ref: '#/components/schemas/BreadcrumbDto'
      required:
        - portfolio
        - property
        - unit
        - lease
        - tenant
    LeaseInvoiceDto:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        createdAt:
          type: string
          readOnly: true
        updatedAt:
          type: string
          readOnly: true
        postAt:
          type: string
        dueAt:
          type: string
          nullable: true
        paidAt:
          type: string
          nullable: true
        breadcrumbs:
          $ref: '#/components/schemas/LeaseInvoiceBreadcrumbsDto'
        organizationId:
          type: string
        portfolioId:
          type: string
        amount:
          type: number
          minimum: 1
        leaseId:
          type: string
        isPaid:
          type: boolean
        memo:
          type: string
          nullable: true
        mfPaymentId:
          type: string
          nullable: true
      required:
        - id
        - createdAt
        - updatedAt
        - postAt
        - dueAt
        - paidAt
        - breadcrumbs
        - organizationId
        - portfolioId
        - amount
        - leaseId
        - isPaid
        - memo
        - mfPaymentId
    PaidStatusEnum:
      type: string
      enum:
        - all
        - paid
        - unpaid
    RoleTypeEnum:
      type: string
      enum:
        - ORGADMIN
        - PORTFOLIO
        - TENANT
    RoleDto:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        createdAt:
          type: string
          readOnly: true
        updatedAt:
          type: string
          readOnly: true
        roleType:
          $ref: '#/components/schemas/RoleTypeEnum'
        userId:
          type: string
        email:
          type: string
        organizationId:
          type: string
        portfolioId:
          type: string
          nullable: true
        tenantId:
          type: string
          nullable: true
        isAccepted:
          type: boolean
        isDefault:
          type: boolean
      required:
        - id
        - createdAt
        - updatedAt
        - roleType
        - userId
        - organizationId
        - portfolioId
        - tenantId
        - isAccepted
        - isDefault
    CreateRoleDto:
      type: object
      properties:
        roleType:
          $ref: '#/components/schemas/RoleTypeEnum'
        organizationId:
          type: string
        email:
          type: string
        portfolioId:
          type: string
          nullable: true
        tenantId:
          type: string
          nullable: true
        isAccepted:
          type: boolean
        isDefault:
          type: boolean
      required:
        - roleType
        - organizationId
        - email
    UserDto:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        createdAt:
          type: string
          readOnly: true
        updatedAt:
          type: string
          readOnly: true
        fullName:
          type: string
          nullable: true
        email:
          type: string
      required:
        - id
        - createdAt
        - updatedAt
        - email
    CreateLeaseInvoiceDto:
      type: object
      properties:
        postAt:
          type: string
        dueAt:
          type: string
          nullable: true
        paidAt:
          type: string
          nullable: true
        organizationId:
          type: string
        portfolioId:
          type: string
        amount:
          type: number
          minimum: 1
        leaseId:
          type: string
        isPaid:
          type: boolean
        memo:
          type: string
          nullable: true
        mfPaymentId:
          type: string
          nullable: true
      required:
        - postAt
        - organizationId
        - portfolioId
        - amount
        - leaseId
    PartialLeaseInvoiceDto:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        createdAt:
          type: string
          readOnly: true
        updatedAt:
          type: string
          readOnly: true
        postAt:
          type: string
        dueAt:
          type: string
          nullable: true
        paidAt:
          type: string
          nullable: true
        breadcrumbs:
          $ref: '#/components/schemas/LeaseInvoiceBreadcrumbsDto'
        organizationId:
          type: string
        portfolioId:
          type: string
        amount:
          type: number
          minimum: 1
        leaseId:
          type: string
        isPaid:
          type: boolean
        memo:
          type: string
          nullable: true
        mfPaymentId:
          type: string
          nullable: true
    UpdateLeaseInvoiceDto:
      type: object
      properties:
        postAt:
          type: string
        dueAt:
          type: string
          nullable: true
        paidAt:
          type: string
          nullable: true
        organizationId:
          type: string
        portfolioId:
          type: string
        amount:
          type: number
          minimum: 1
        leaseId:
          type: string
        isPaid:
          type: boolean
        memo:
          type: string
          nullable: true
        mfPaymentId:
          type: string
          nullable: true
    CreateLeaseDto:
      type: object
      properties:
        start:
          type: string
        end:
          type: string
        organizationId:
          type: string
        portfolioId:
          type: string
        tenantId:
          type: string
        unitId:
          type: string
        monthlyRent:
          type: number
          minimum: 1
        deposit:
          type: number
        canPay:
          type: boolean
        notify:
          type: boolean
        license:
          type: string
          nullable: true
      required:
        - start
        - end
        - organizationId
        - portfolioId
        - tenantId
        - unitId
        - monthlyRent
    PartialLeaseDto:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        createdAt:
          type: string
          readOnly: true
        updatedAt:
          type: string
          readOnly: true
        start:
          type: string
        end:
          type: string
        breadcrumbs:
          $ref: '#/components/schemas/LeaseBreadcrumbsDto'
        organizationId:
          type: string
        portfolioId:
          type: string
        tenantId:
          type: string
        unitId:
          type: string
        monthlyRent:
          type: number
          minimum: 1
        deposit:
          type: number
        canPay:
          type: boolean
        notify:
          type: boolean
        license:
          type: string
          nullable: true
    UpdateLeaseDto:
      type: object
      properties:
        start:
          type: string
        end:
          type: string
        organizationId:
          type: string
        portfolioId:
          type: string
        tenantId:
          type: string
        unitId:
          type: string
        monthlyRent:
          type: number
          minimum: 1
        deposit:
          type: number
        canPay:
          type: boolean
        notify:
          type: boolean
        license:
          type: string
          nullable: true
    CreateManyLeaseInvoicesDto:
      type: object
      properties:
        postAt:
          type: string
        dueAt:
          type: string
          nullable: true
        paidAt:
          type: string
          nullable: true
        organizationId:
          type: string
        portfolioId:
          type: string
        amount:
          type: number
          minimum: 1
        isPaid:
          type: boolean
        memo:
          type: string
          nullable: true
        mfPaymentId:
          type: string
          nullable: true
      required:
        - postAt
        - organizationId
        - portfolioId
        - amount
    CreatePortfolioDto:
      type: object
      properties:
        dob:
          type: string
          nullable: true
        organizationId:
          type: string
        fullName:
          type: string
          minLength: 1
          maxLength: 255
        label:
          type: string
          nullable: true
        civilid:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
      required:
        - organizationId
        - fullName
    PortfolioDto:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        createdAt:
          type: string
          readOnly: true
        updatedAt:
          type: string
          readOnly: true
        dob:
          type: string
          nullable: true
        title:
          type: string
        organizationId:
          type: string
        fullName:
          type: string
          minLength: 1
          maxLength: 255
        label:
          type: string
          nullable: true
        civilid:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
      required:
        - id
        - createdAt
        - updatedAt
        - dob
        - title
        - organizationId
        - fullName
        - label
        - civilid
        - phone
    UpdatePortfolioDto:
      type: object
      properties:
        dob:
          type: string
          nullable: true
        organizationId:
          type: string
        fullName:
          type: string
          minLength: 1
          maxLength: 255
        label:
          type: string
          nullable: true
        civilid:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
    PropertyBreadcrumbsDto:
      type: object
      properties:
        portfolio:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/BreadcrumbDto'
        property:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/BreadcrumbDto'
      required:
        - portfolio
        - property
    PropertyDto:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        createdAt:
          type: string
          readOnly: true
        updatedAt:
          type: string
          readOnly: true
        address:
          type: string
        title:
          type: string
        breadcrumbs:
          $ref: '#/components/schemas/PropertyBreadcrumbsDto'
        organizationId:
          type: string
        portfolioId:
          type: string
        area:
          type: string
          nullable: true
          minLength: 1
          maxLength: 255
        block:
          type: string
          nullable: true
        avenue:
          type: string
          nullable: true
        street:
          type: string
          nullable: true
        number:
          type: string
          nullable: true
        parcel:
          type: string
          nullable: true
        paci:
          type: string
          nullable: true
        cost:
          type: number
          nullable: true
        label:
          type: string
          nullable: true
        long:
          type: number
          nullable: true
        lat:
          type: number
          nullable: true
      required:
        - id
        - createdAt
        - updatedAt
        - address
        - title
        - breadcrumbs
        - organizationId
        - portfolioId
        - area
        - block
        - avenue
        - street
        - number
        - parcel
        - paci
        - cost
        - label
        - long
        - lat
    UnitVacancy:
      type: object
      properties:
        isVacant:
          type: boolean
        vacancyDistance:
          type: string
        vacancyDate:
          format: date-time
          type: string
      required:
        - isVacant
        - vacancyDistance
        - vacancyDate
    UnitBreadcrumbsDto:
      type: object
      properties:
        portfolio:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/BreadcrumbDto'
        property:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/BreadcrumbDto'
        unit:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/BreadcrumbDto'
      required:
        - portfolio
        - property
        - unit
    UnitDto:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        createdAt:
          type: string
          readOnly: true
        updatedAt:
          type: string
          readOnly: true
        title:
          type: string
        vacancy:
          $ref: '#/components/schemas/UnitVacancy'
        breadcrumbs:
          $ref: '#/components/schemas/UnitBreadcrumbsDto'
        organizationId:
          type: string
        portfolioId:
          type: string
        propertyId:
          type: string
        unitNumber:
          type: string
          minLength: 1
          maxLength: 255
        floor:
          type: number
          nullable: true
        size:
          type: number
          nullable: true
          minimum: 1
        bed:
          type: number
          nullable: true
          minimum: 1
        bath:
          type: number
          nullable: true
          minimum: 1
        marketRent:
          type: number
          nullable: true
          minimum: 1
        type:
          type: string
          nullable: true
        usage:
          type: string
          nullable: true
        label:
          type: string
          nullable: true
      required:
        - id
        - createdAt
        - updatedAt
        - title
        - vacancy
        - breadcrumbs
        - organizationId
        - portfolioId
        - propertyId
        - unitNumber
        - floor
        - size
        - bed
        - bath
        - marketRent
        - type
        - usage
        - label
    PayoutBreadcrumbsDto:
      type: object
      properties:
        portfolio:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/BreadcrumbDto'
      required:
        - portfolio
    PayoutDto:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        createdAt:
          type: string
          readOnly: true
        updatedAt:
          type: string
          readOnly: true
        postAt:
          type: string
        breadcrumbs:
          $ref: '#/components/schemas/PayoutBreadcrumbsDto'
        organizationId:
          type: string
        portfolioId:
          type: string
        amount:
          type: number
          minimum: 1
        memo:
          type: string
          nullable: true
      required:
        - id
        - createdAt
        - updatedAt
        - postAt
        - breadcrumbs
        - organizationId
        - portfolioId
        - amount
    BalanceDto:
      type: object
      properties:
        expenses:
          type: number
        leaseInvoices:
          type: number
        payouts:
          type: number
        total:
          type: number
      required:
        - expenses
        - leaseInvoices
        - payouts
        - total
    CreatePropertyDto:
      type: object
      properties:
        organizationId:
          type: string
        portfolioId:
          type: string
        area:
          type: string
          nullable: true
          minLength: 1
          maxLength: 255
        block:
          type: string
          nullable: true
        avenue:
          type: string
          nullable: true
        street:
          type: string
          nullable: true
        number:
          type: string
          nullable: true
        parcel:
          type: string
          nullable: true
        paci:
          type: string
          nullable: true
        cost:
          type: number
          nullable: true
        label:
          type: string
          nullable: true
        long:
          type: number
          nullable: true
        lat:
          type: number
          nullable: true
      required:
        - organizationId
        - portfolioId
        - area
    UpdatePropertyDto:
      type: object
      properties:
        organizationId:
          type: string
        portfolioId:
          type: string
        area:
          type: string
          nullable: true
          minLength: 1
          maxLength: 255
        block:
          type: string
          nullable: true
        avenue:
          type: string
          nullable: true
        street:
          type: string
          nullable: true
        number:
          type: string
          nullable: true
        parcel:
          type: string
          nullable: true
        paci:
          type: string
          nullable: true
        cost:
          type: number
          nullable: true
        label:
          type: string
          nullable: true
        long:
          type: number
          nullable: true
        lat:
          type: number
          nullable: true
    CreateUnitDto:
      type: object
      properties:
        organizationId:
          type: string
        portfolioId:
          type: string
        propertyId:
          type: string
        unitNumber:
          type: string
          minLength: 1
          maxLength: 255
        floor:
          type: number
          nullable: true
        size:
          type: number
          nullable: true
          minimum: 1
        bed:
          type: number
          nullable: true
          minimum: 1
        bath:
          type: number
          nullable: true
          minimum: 1
        marketRent:
          type: number
          nullable: true
          minimum: 1
        type:
          type: string
          nullable: true
        usage:
          type: string
          nullable: true
        label:
          type: string
          nullable: true
      required:
        - organizationId
        - portfolioId
        - propertyId
        - unitNumber
    PartialUnitDto:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        createdAt:
          type: string
          readOnly: true
        updatedAt:
          type: string
          readOnly: true
        title:
          type: string
        vacancy:
          $ref: '#/components/schemas/UnitVacancy'
        breadcrumbs:
          $ref: '#/components/schemas/UnitBreadcrumbsDto'
        organizationId:
          type: string
        portfolioId:
          type: string
        propertyId:
          type: string
        unitNumber:
          type: string
          minLength: 1
          maxLength: 255
        floor:
          type: number
          nullable: true
        size:
          type: number
          nullable: true
          minimum: 1
        bed:
          type: number
          nullable: true
          minimum: 1
        bath:
          type: number
          nullable: true
          minimum: 1
        marketRent:
          type: number
          nullable: true
          minimum: 1
        type:
          type: string
          nullable: true
        usage:
          type: string
          nullable: true
        label:
          type: string
          nullable: true
    UpdateUnitDto:
      type: object
      properties:
        organizationId:
          type: string
        portfolioId:
          type: string
        propertyId:
          type: string
        unitNumber:
          type: string
          minLength: 1
          maxLength: 255
        floor:
          type: number
          nullable: true
        size:
          type: number
          nullable: true
          minimum: 1
        bed:
          type: number
          nullable: true
          minimum: 1
        bath:
          type: number
          nullable: true
          minimum: 1
        marketRent:
          type: number
          nullable: true
          minimum: 1
        type:
          type: string
          nullable: true
        usage:
          type: string
          nullable: true
        label:
          type: string
          nullable: true
    CreatePayoutDto:
      type: object
      properties:
        postAt:
          type: string
        organizationId:
          type: string
        portfolioId:
          type: string
        amount:
          type: number
          minimum: 1
        memo:
          type: string
          nullable: true
      required:
        - postAt
        - organizationId
        - portfolioId
        - amount
    UpdatePayoutDto:
      type: object
      properties:
        postAt:
          type: string
        organizationId:
          type: string
        portfolioId:
          type: string
        amount:
          type: number
          minimum: 1
        memo:
          type: string
          nullable: true
    ByMonthDto:
      type: object
      properties:
        amount:
          type: number
        date:
          type: string
      required:
        - amount
        - date
    Occupancy:
      type: object
      properties:
        date:
          type: number
        occupiedPct:
          type: number
      required:
        - date
        - occupiedPct
    ValidatedUserDto:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        createdAt:
          type: string
          readOnly: true
        updatedAt:
          type: string
          readOnly: true
        fullName:
          type: string
          nullable: true
        roles:
          type: array
          items:
            title: ValidatedRoleDto
            allOf:
              - $ref: '#/components/schemas/RoleDto'
              - type: object
                required:
                  - organization
                properties:
                  organization:
                    type: object
                    required:
                      - id
                      - fullName
                    properties:
                      id:
                        type: string
                      fullName:
                        type: string
                      title:
                        type: string
        email:
          type: string
      required:
        - id
        - createdAt
        - updatedAt
        - roles
        - email
    CreateExpenseDto:
      type: object
      properties:
        postAt:
          type: string
        organizationId:
          type: string
        portfolioId:
          type: string
        amount:
          type: number
          minimum: 1
        memo:
          type: string
          nullable: true
        unitId:
          type: string
          nullable: true
        propertyId:
          type: string
          nullable: true
        maintenanceOrderId:
          type: string
          nullable: true
        categoryId:
          type: string
          nullable: true
      required:
        - postAt
        - organizationId
        - portfolioId
        - amount
    ExpenseBreadcrumbsDto:
      type: object
      properties:
        portfolio:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/BreadcrumbDto'
        property:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/BreadcrumbDto'
        unit:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/BreadcrumbDto'
      required:
        - portfolio
    ExpenseCategoryDto:
      type: object
      properties:
        id:
          type: string
        labelEn:
          type: string
        parentId:
          type: string
          nullable: true
        labelAr:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        isGroup:
          type: boolean
      required:
        - id
        - labelEn
        - parentId
        - labelAr
        - isGroup
    PartialExpenseDto:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        createdAt:
          type: string
          readOnly: true
        updatedAt:
          type: string
          readOnly: true
        postAt:
          type: string
        breadcrumbs:
          $ref: '#/components/schemas/ExpenseBreadcrumbsDto'
        organizationId:
          type: string
        portfolioId:
          type: string
        amount:
          type: number
          minimum: 1
        memo:
          type: string
          nullable: true
        unitId:
          type: string
          nullable: true
        propertyId:
          type: string
          nullable: true
        maintenanceOrderId:
          type: string
          nullable: true
        categoryId:
          type: string
          nullable: true
        expenseType:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/ExpenseCategoryDto'
    ExpenseDto:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        createdAt:
          type: string
          readOnly: true
        updatedAt:
          type: string
          readOnly: true
        postAt:
          type: string
        breadcrumbs:
          $ref: '#/components/schemas/ExpenseBreadcrumbsDto'
        expenseType:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/ExpenseCategoryDto'
        organizationId:
          type: string
        portfolioId:
          type: string
        amount:
          type: number
          minimum: 1
        memo:
          type: string
          nullable: true
        unitId:
          type: string
          nullable: true
        propertyId:
          type: string
          nullable: true
        maintenanceOrderId:
          type: string
          nullable: true
        categoryId:
          type: string
          nullable: true
      required:
        - id
        - createdAt
        - updatedAt
        - postAt
        - breadcrumbs
        - expenseType
        - organizationId
        - portfolioId
        - amount
        - memo
        - unitId
        - propertyId
        - maintenanceOrderId
        - categoryId
    UpdateExpenseDto:
      type: object
      properties:
        postAt:
          type: string
        organizationId:
          type: string
        portfolioId:
          type: string
        amount:
          type: number
          minimum: 1
        memo:
          type: string
          nullable: true
        unitId:
          type: string
          nullable: true
        propertyId:
          type: string
          nullable: true
        maintenanceOrderId:
          type: string
          nullable: true
        categoryId:
          type: string
          nullable: true
    CreateOrganizationDto:
      type: object
      properties:
        fullName:
          type: string
          minLength: 3
          maxLength: 100
        label:
          type: string
          nullable: true
      required:
        - fullName
    OrganizationDto:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        createdAt:
          type: string
          readOnly: true
        updatedAt:
          type: string
          readOnly: true
        title:
          type: string
        fullName:
          type: string
          minLength: 3
          maxLength: 100
        label:
          type: string
          nullable: true
      required:
        - id
        - createdAt
        - updatedAt
        - title
        - fullName
        - label
    OrganizationCreatedDto:
      type: object
      properties:
        organization:
          $ref: '#/components/schemas/OrganizationDto'
        roleId:
          type: string
      required:
        - organization
        - roleId
    UpdateOrganizationDto:
      type: object
      properties:
        fullName:
          type: string
          minLength: 3
          maxLength: 100
        label:
          type: string
          nullable: true
    SearchDto:
      type: object
      properties:
        entityTitle:
          type: string
        hits:
          type: array
          items:
            title: HitDto
            type: object
            required:
              - id
              - url
              - _formatted
            properties:
              id:
                type: string
              title:
                type: string
                nullable: true
              url:
                type: string
              _formatted:
                type: object
                properties:
                  title:
                    type: string
                    nullable: true
        offset:
          type: number
        limit:
          type: number
        processingTimeMs:
          type: number
        facetDistribution:
          type: object
        query:
          type: string
        estimatedTotalHits:
          type: number
      required:
        - entityTitle
        - hits
        - offset
        - limit
        - processingTimeMs
        - query
        - estimatedTotalHits
    CreateExpenseCategoryDto:
      type: object
      properties:
        labelEn:
          type: string
        isGroup:
          type: boolean
        parentId:
          type: string
          nullable: true
        labelAr:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
      required:
        - labelEn
        - isGroup
    UpdateExpenseCategoryDto:
      type: object
      properties:
        id:
          type: string
        labelEn:
          type: string
        parentId:
          type: string
          nullable: true
        labelAr:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        isGroup:
          type: boolean
      required:
        - id
    UpdateAllExpenseCategoriesDto:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/UpdateExpenseCategoryDto'
      required:
        - items
    CreateFileDto:
      type: object
      properties:
        organizationId:
          type: string
        relationKey:
          enum:
            - tenant
            - portfolio
            - property
            - unit
            - expense
            - lease
            - leaseInvoice
            - maintenanceOrder
          type: string
        relationValue:
          type: string
        fileName:
          type: string
        label:
          type: string
          nullable: true
      required:
        - organizationId
        - relationKey
        - relationValue
        - fileName
    FileDto:
      type: object
      properties:
        key:
          type: string
        size:
          type: number
      required:
        - key
        - size
    BreadcrumbsDto:
      type: object
      properties:
        portfolio:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/BreadcrumbDto'
        property:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/BreadcrumbDto'
        unit:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/BreadcrumbDto'
        lease:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/BreadcrumbDto'
        tenant:
          $ref: '#/components/schemas/BreadcrumbDto'
      required:
        - portfolio
        - property
        - unit
        - lease
        - tenant
    PaginatedDto:
      type: object
      properties:
        page:
          type: number
        take:
          type: number
        itemCount:
          type: number
          description: Total number of items in the collection
        pageCount:
          type: number
        hasPreviousPage:
          type: boolean
        hasNextPage:
          type: boolean
        pageSize:
          type: number
        start:
          type: number
        end:
          type: number
      required:
        - page
        - take
        - itemCount
        - pageCount
        - hasPreviousPage
        - hasNextPage
        - pageSize
        - start
        - end
    PaginatedMetaDto:
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/PaginatedDto'
      required:
        - pagination
