# yaml-language-server: $schema=https://json.schemastore.org/taskfile.json
---
version: '3'

interval: '300ms'

dotenv: ['../../.env']

tasks:
  clean:
    cmds:
      - rm -rf dist

  build:utils:
    method: none
    sources:
      - ../utils/src/**/*.ts
    cmds:
      - pnpm swc --config exclude="/**/*.(spec|stub).ts" -d dist ../utils/src

  build:backend:
    method: none
    sources:
      - src/**/*.ts
    cmds:
      - pnpm swc --config exclude="/**/*.(spec|stub).ts" -d dist/backend/src src
      - cp package.json dist/backend

  build:
    method: none
    cmds:
      - task: clean
      - task: build:utils
      - task: build:backend

  start:prod:
    method: none
    deps:
      - build
    cmds:
      - node dist/backend/src/main.js

  start:mock:
    method: none
    deps:
      - build
    cmds:
      - pnpm vitest --run test/mocked.spec.ts -c vitest.config.mocked.ts

  start:
    # Detect start mode based on PUBLIC_IS_TESTING from .env
    cmds:
      - task: '{{if eq .PUBLIC_IS_TESTING "1"}}start:mock{{else}}start:prod{{end}}'

  test:
    env:
      DATABASE_URL: 'postgresql://postgres:postgres@localhost:5435/aq-db'
    cmds:
      - docker compose -f docker-compose-test.yml up -d
      - until nc -z localhost 5435; do sleep 1; done;
      - pnpm prisma migrate reset --force --skip-seed
      - '{{if eq .TEST_WATCH "1"}}pnpm vitest{{else}}pnpm vitest --run{{end}}'

  swagger:generate:
    env:
      GENERATE_SWAGGER: '1'
    cmds:
      - pnpm nest start --entryFile ./backend/src/main --path tsconfig.json
      - ./get-openapi.sh
      - rm -rf ../site/src/api/openapi
      - pnpm openapi-generator-cli generate

  sentry:release:
    env:
      SENTRY_PROPERTIES: 'sentry.properties'
    cmds:
      - sentry-cli sourcemaps inject dist
      - sentry-cli sourcemaps upload dist
      - sentry-cli releases set-commits --auto backend-$SENTRY_RELEASE_VERSION
      - sentry-cli releases deploys backend-$SENTRY_RELEASE_VERSION new -e $SENTRY_RELEASE_ENVIRONMENT
