/* tslint:disable */
/* eslint-disable */
/**
 * Aqaratech
 * Aqaratech API
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import * as runtime from '../runtime';
import type { ByMonthDto, Occupancy } from '../models';

export interface AggregateApiGetOccupancyRequest {
	start?: string;
	end?: string;
	portfolioId?: string;
	propertyId?: string;
	unitId?: string;
}

/**
 * AggregateApi - interface
 *
 * @export
 * @interface AggregateApiInterface
 */
export interface AggregateApiInterface {
	/**
	 *
	 * @summary
	 * @throws {RequiredError}
	 * @memberof AggregateApiInterface
	 */
	getExpensesByMonthRaw(
		initOverrides?: RequestInit | runtime.InitOverrideFunction,
	): Promise<runtime.ApiResponse<Array<ByMonthDto>>>;

	/**
	 *
	 *
	 */
	getExpensesByMonth(
		initOverrides?: RequestInit | runtime.InitOverrideFunction,
	): Promise<Array<ByMonthDto>>;

	/**
	 *
	 * @summary
	 * @throws {RequiredError}
	 * @memberof AggregateApiInterface
	 */
	getIncomeByMonthRaw(
		initOverrides?: RequestInit | runtime.InitOverrideFunction,
	): Promise<runtime.ApiResponse<Array<ByMonthDto>>>;

	/**
	 *
	 *
	 */
	getIncomeByMonth(
		initOverrides?: RequestInit | runtime.InitOverrideFunction,
	): Promise<Array<ByMonthDto>>;

	/**
	 *
	 * @summary
	 * @throws {RequiredError}
	 * @memberof AggregateApiInterface
	 */
	getOccupancyRaw(
		requestParameters: AggregateApiGetOccupancyRequest,
		initOverrides?: RequestInit | runtime.InitOverrideFunction,
	): Promise<runtime.ApiResponse<Array<Occupancy>>>;

	/**
	 *
	 *
	 */
	getOccupancy(
		requestParameters: AggregateApiGetOccupancyRequest,
		initOverrides?: RequestInit | runtime.InitOverrideFunction,
	): Promise<Array<Occupancy>>;
}

/**
 *
 */
export class AggregateApi
	extends runtime.BaseAPI
	implements AggregateApiInterface
{
	/**
	 *
	 *
	 */
	async getExpensesByMonthRaw(
		initOverrides?: RequestInit | runtime.InitOverrideFunction,
	): Promise<runtime.ApiResponse<Array<ByMonthDto>>> {
		const queryParameters: any = {};

		const headerParameters: runtime.HTTPHeaders = {};

		const response = await this.request(
			{
				path: `/aggregate/expensesByMonth`,
				method: 'GET',
				headers: headerParameters,
				query: queryParameters,
			},
			initOverrides,
		);

		return new runtime.JSONApiResponse(response);
	}

	/**
	 *
	 *
	 */
	async getExpensesByMonth(
		initOverrides?: RequestInit | runtime.InitOverrideFunction,
	): Promise<Array<ByMonthDto>> {
		const response = await this.getExpensesByMonthRaw(initOverrides);
		return await response.value();
	}

	/**
	 *
	 *
	 */
	async getIncomeByMonthRaw(
		initOverrides?: RequestInit | runtime.InitOverrideFunction,
	): Promise<runtime.ApiResponse<Array<ByMonthDto>>> {
		const queryParameters: any = {};

		const headerParameters: runtime.HTTPHeaders = {};

		const response = await this.request(
			{
				path: `/aggregate/incomeByMonth`,
				method: 'GET',
				headers: headerParameters,
				query: queryParameters,
			},
			initOverrides,
		);

		return new runtime.JSONApiResponse(response);
	}

	/**
	 *
	 *
	 */
	async getIncomeByMonth(
		initOverrides?: RequestInit | runtime.InitOverrideFunction,
	): Promise<Array<ByMonthDto>> {
		const response = await this.getIncomeByMonthRaw(initOverrides);
		return await response.value();
	}

	/**
	 *
	 *
	 */
	async getOccupancyRaw(
		requestParameters: AggregateApiGetOccupancyRequest,
		initOverrides?: RequestInit | runtime.InitOverrideFunction,
	): Promise<runtime.ApiResponse<Array<Occupancy>>> {
		const queryParameters: any = {};

		if (requestParameters.start !== undefined) {
			queryParameters['start'] = requestParameters.start;
		}

		if (requestParameters.end !== undefined) {
			queryParameters['end'] = requestParameters.end;
		}

		if (requestParameters.portfolioId !== undefined) {
			queryParameters['portfolioId'] = requestParameters.portfolioId;
		}

		if (requestParameters.propertyId !== undefined) {
			queryParameters['propertyId'] = requestParameters.propertyId;
		}

		if (requestParameters.unitId !== undefined) {
			queryParameters['unitId'] = requestParameters.unitId;
		}

		const headerParameters: runtime.HTTPHeaders = {};

		const response = await this.request(
			{
				path: `/aggregate/occupancy`,
				method: 'GET',
				headers: headerParameters,
				query: queryParameters,
			},
			initOverrides,
		);

		return new runtime.JSONApiResponse(response);
	}

	/**
	 *
	 *
	 */
	async getOccupancy(
		requestParameters: AggregateApiGetOccupancyRequest = {},
		initOverrides?: RequestInit | runtime.InitOverrideFunction,
	): Promise<Array<Occupancy>> {
		const response = await this.getOccupancyRaw(
			requestParameters,
			initOverrides,
		);
		return await response.value();
	}
}
