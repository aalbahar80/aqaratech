/* tslint:disable */
/* eslint-disable */
/**
 * Aqaratech
 * Aqaratech API
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import * as runtime from '../runtime';
import type { ValidatedUserDto } from '../models';

export interface UsersApiFindProfileRequest {
	xRoleId?: string;
}

/**
 * UsersApi - interface
 *
 * @export
 * @interface UsersApiInterface
 */
export interface UsersApiInterface {
	/**
	 *
	 * @summary
	 * @param {string} [xRoleId]
	 * @param {*} [options] Override http request option.
	 * @throws {RequiredError}
	 * @memberof UsersApiInterface
	 */
	findProfileRaw(
		requestParameters: UsersApiFindProfileRequest,
		initOverrides?: RequestInit | runtime.InitOverrideFunction,
	): Promise<runtime.ApiResponse<ValidatedUserDto>>;

	/**
	 *
	 *
	 */
	findProfile(
		requestParameters: UsersApiFindProfileRequest,
		initOverrides?: RequestInit | runtime.InitOverrideFunction,
	): Promise<ValidatedUserDto>;
}

/**
 *
 */
export class UsersApi extends runtime.BaseAPI implements UsersApiInterface {
	/**
	 *
	 *
	 */
	async findProfileRaw(
		requestParameters: UsersApiFindProfileRequest,
		initOverrides?: RequestInit | runtime.InitOverrideFunction,
	): Promise<runtime.ApiResponse<ValidatedUserDto>> {
		const queryParameters: any = {};

		const headerParameters: runtime.HTTPHeaders = {};

		if (
			requestParameters.xRoleId !== undefined &&
			requestParameters.xRoleId !== null
		) {
			headerParameters['x-role-id'] = String(requestParameters.xRoleId);
		}

		if (this.configuration && this.configuration.accessToken) {
			const token = this.configuration.accessToken;
			const tokenString = await token('bearer', []);

			if (tokenString) {
				headerParameters['Authorization'] = `Bearer ${tokenString}`;
			}
		}
		const response = await this.request(
			{
				path: `/users/me`,
				method: 'GET',
				headers: headerParameters,
				query: queryParameters,
			},
			initOverrides,
		);

		return new runtime.JSONApiResponse(response);
	}

	/**
	 *
	 *
	 */
	async findProfile(
		requestParameters: UsersApiFindProfileRequest = {},
		initOverrides?: RequestInit | runtime.InitOverrideFunction,
	): Promise<ValidatedUserDto> {
		const response = await this.findProfileRaw(
			requestParameters,
			initOverrides,
		);
		return await response.value();
	}
}
