/* tslint:disable */
/* eslint-disable */
/**
 * Aqaratech
 * Aqaratech API
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import * as runtime from '../runtime';
import type {
	ClaimRolesResponse,
	ConfirmPhoneDto,
	VerificationResponse,
	VerifyPhoneDto,
} from '../models';

export interface PhoneVerifyApiConfirmRequest {
	confirmPhoneDto: ConfirmPhoneDto;
}

export interface PhoneVerifyApiInitiateRequest {
	verifyPhoneDto: VerifyPhoneDto;
}

/**
 *
 */
export class PhoneVerifyApi extends runtime.BaseAPI {
	/**
	 */
	async claimRolesRaw(
		initOverrides?: RequestInit | runtime.InitOverrideFunction,
	): Promise<runtime.ApiResponse<ClaimRolesResponse>> {
		const queryParameters: any = {};

		const headerParameters: runtime.HTTPHeaders = {};

		const response = await this.request(
			{
				path: `/phone-verify/claim-roles`,
				method: 'POST',
				headers: headerParameters,
				query: queryParameters,
			},
			initOverrides,
		);

		return new runtime.JSONApiResponse(response);
	}

	/**
	 */
	async claimRoles(
		initOverrides?: RequestInit | runtime.InitOverrideFunction,
	): Promise<ClaimRolesResponse> {
		const response = await this.claimRolesRaw(initOverrides);
		return await response.value();
	}

	/**
	 */
	async confirmRaw(
		requestParameters: PhoneVerifyApiConfirmRequest,
		initOverrides?: RequestInit | runtime.InitOverrideFunction,
	): Promise<runtime.ApiResponse<VerificationResponse>> {
		if (
			requestParameters.confirmPhoneDto === null ||
			requestParameters.confirmPhoneDto === undefined
		) {
			throw new runtime.RequiredError(
				'confirmPhoneDto',
				'Required parameter requestParameters.confirmPhoneDto was null or undefined when calling confirm.',
			);
		}

		const queryParameters: any = {};

		const headerParameters: runtime.HTTPHeaders = {};

		headerParameters['Content-Type'] = 'application/json';

		const response = await this.request(
			{
				path: `/phone-verify/confirm`,
				method: 'POST',
				headers: headerParameters,
				query: queryParameters,
				body: requestParameters.confirmPhoneDto,
			},
			initOverrides,
		);

		return new runtime.JSONApiResponse(response);
	}

	/**
	 */
	async confirm(
		requestParameters: PhoneVerifyApiConfirmRequest,
		initOverrides?: RequestInit | runtime.InitOverrideFunction,
	): Promise<VerificationResponse> {
		const response = await this.confirmRaw(requestParameters, initOverrides);
		return await response.value();
	}

	/**
	 */
	async initiateRaw(
		requestParameters: PhoneVerifyApiInitiateRequest,
		initOverrides?: RequestInit | runtime.InitOverrideFunction,
	): Promise<runtime.ApiResponse<VerificationResponse>> {
		if (
			requestParameters.verifyPhoneDto === null ||
			requestParameters.verifyPhoneDto === undefined
		) {
			throw new runtime.RequiredError(
				'verifyPhoneDto',
				'Required parameter requestParameters.verifyPhoneDto was null or undefined when calling initiate.',
			);
		}

		const queryParameters: any = {};

		const headerParameters: runtime.HTTPHeaders = {};

		headerParameters['Content-Type'] = 'application/json';

		const response = await this.request(
			{
				path: `/phone-verify/initiate`,
				method: 'POST',
				headers: headerParameters,
				query: queryParameters,
				body: requestParameters.verifyPhoneDto,
			},
			initOverrides,
		);

		return new runtime.JSONApiResponse(response);
	}

	/**
	 */
	async initiate(
		requestParameters: PhoneVerifyApiInitiateRequest,
		initOverrides?: RequestInit | runtime.InitOverrideFunction,
	): Promise<VerificationResponse> {
		const response = await this.initiateRaw(requestParameters, initOverrides);
		return await response.value();
	}
}
