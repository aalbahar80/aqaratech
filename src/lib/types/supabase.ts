/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/": {
    get: {
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/clients": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.clients.id"];
          created_at?: parameters["rowFilter.clients.created_at"];
          updated_at?: parameters["rowFilter.clients.updated_at"];
          is_active?: parameters["rowFilter.clients.is_active"];
          first_name?: parameters["rowFilter.clients.first_name"];
          second_name?: parameters["rowFilter.clients.second_name"];
          third_name?: parameters["rowFilter.clients.third_name"];
          last_name?: parameters["rowFilter.clients.last_name"];
          civilid?: parameters["rowFilter.clients.civilid"];
          phone?: parameters["rowFilter.clients.phone"];
          email?: parameters["rowFilter.clients.email"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["clients"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** clients */
          clients?: definitions["clients"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.clients.id"];
          created_at?: parameters["rowFilter.clients.created_at"];
          updated_at?: parameters["rowFilter.clients.updated_at"];
          is_active?: parameters["rowFilter.clients.is_active"];
          first_name?: parameters["rowFilter.clients.first_name"];
          second_name?: parameters["rowFilter.clients.second_name"];
          third_name?: parameters["rowFilter.clients.third_name"];
          last_name?: parameters["rowFilter.clients.last_name"];
          civilid?: parameters["rowFilter.clients.civilid"];
          phone?: parameters["rowFilter.clients.phone"];
          email?: parameters["rowFilter.clients.email"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.clients.id"];
          created_at?: parameters["rowFilter.clients.created_at"];
          updated_at?: parameters["rowFilter.clients.updated_at"];
          is_active?: parameters["rowFilter.clients.is_active"];
          first_name?: parameters["rowFilter.clients.first_name"];
          second_name?: parameters["rowFilter.clients.second_name"];
          third_name?: parameters["rowFilter.clients.third_name"];
          last_name?: parameters["rowFilter.clients.last_name"];
          civilid?: parameters["rowFilter.clients.civilid"];
          phone?: parameters["rowFilter.clients.phone"];
          email?: parameters["rowFilter.clients.email"];
        };
        body: {
          /** clients */
          clients?: definitions["clients"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/expenses": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.expenses.id"];
          unit_id?: parameters["rowFilter.expenses.unit_id"];
          property_id?: parameters["rowFilter.expenses.property_id"];
          client_id?: parameters["rowFilter.expenses.client_id"];
          maintenance_order_id?: parameters["rowFilter.expenses.maintenance_order_id"];
          created_at?: parameters["rowFilter.expenses.created_at"];
          updated_at?: parameters["rowFilter.expenses.updated_at"];
          amount?: parameters["rowFilter.expenses.amount"];
          date_post?: parameters["rowFilter.expenses.date_post"];
          category?: parameters["rowFilter.expenses.category"];
          memo?: parameters["rowFilter.expenses.memo"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["expenses"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** expenses */
          expenses?: definitions["expenses"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.expenses.id"];
          unit_id?: parameters["rowFilter.expenses.unit_id"];
          property_id?: parameters["rowFilter.expenses.property_id"];
          client_id?: parameters["rowFilter.expenses.client_id"];
          maintenance_order_id?: parameters["rowFilter.expenses.maintenance_order_id"];
          created_at?: parameters["rowFilter.expenses.created_at"];
          updated_at?: parameters["rowFilter.expenses.updated_at"];
          amount?: parameters["rowFilter.expenses.amount"];
          date_post?: parameters["rowFilter.expenses.date_post"];
          category?: parameters["rowFilter.expenses.category"];
          memo?: parameters["rowFilter.expenses.memo"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.expenses.id"];
          unit_id?: parameters["rowFilter.expenses.unit_id"];
          property_id?: parameters["rowFilter.expenses.property_id"];
          client_id?: parameters["rowFilter.expenses.client_id"];
          maintenance_order_id?: parameters["rowFilter.expenses.maintenance_order_id"];
          created_at?: parameters["rowFilter.expenses.created_at"];
          updated_at?: parameters["rowFilter.expenses.updated_at"];
          amount?: parameters["rowFilter.expenses.amount"];
          date_post?: parameters["rowFilter.expenses.date_post"];
          category?: parameters["rowFilter.expenses.category"];
          memo?: parameters["rowFilter.expenses.memo"];
        };
        body: {
          /** expenses */
          expenses?: definitions["expenses"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/expenses_types": {
    get: {
      parameters: {
        query: {
          value?: parameters["rowFilter.expenses_types.value"];
          description?: parameters["rowFilter.expenses_types.description"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["expenses_types"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** expenses_types */
          expenses_types?: definitions["expenses_types"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          value?: parameters["rowFilter.expenses_types.value"];
          description?: parameters["rowFilter.expenses_types.description"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          value?: parameters["rowFilter.expenses_types.value"];
          description?: parameters["rowFilter.expenses_types.description"];
        };
        body: {
          /** expenses_types */
          expenses_types?: definitions["expenses_types"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/leases": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.leases.id"];
          tenant_id?: parameters["rowFilter.leases.tenant_id"];
          unit_id?: parameters["rowFilter.leases.unit_id"];
          created_at?: parameters["rowFilter.leases.created_at"];
          updated_at?: parameters["rowFilter.leases.updated_at"];
          start_date?: parameters["rowFilter.leases.start_date"];
          end_date?: parameters["rowFilter.leases.end_date"];
          monthly_rent?: parameters["rowFilter.leases.monthly_rent"];
          deposit?: parameters["rowFilter.leases.deposit"];
          is_signed?: parameters["rowFilter.leases.is_signed"];
          license?: parameters["rowFilter.leases.license"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["leases"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** leases */
          leases?: definitions["leases"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.leases.id"];
          tenant_id?: parameters["rowFilter.leases.tenant_id"];
          unit_id?: parameters["rowFilter.leases.unit_id"];
          created_at?: parameters["rowFilter.leases.created_at"];
          updated_at?: parameters["rowFilter.leases.updated_at"];
          start_date?: parameters["rowFilter.leases.start_date"];
          end_date?: parameters["rowFilter.leases.end_date"];
          monthly_rent?: parameters["rowFilter.leases.monthly_rent"];
          deposit?: parameters["rowFilter.leases.deposit"];
          is_signed?: parameters["rowFilter.leases.is_signed"];
          license?: parameters["rowFilter.leases.license"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.leases.id"];
          tenant_id?: parameters["rowFilter.leases.tenant_id"];
          unit_id?: parameters["rowFilter.leases.unit_id"];
          created_at?: parameters["rowFilter.leases.created_at"];
          updated_at?: parameters["rowFilter.leases.updated_at"];
          start_date?: parameters["rowFilter.leases.start_date"];
          end_date?: parameters["rowFilter.leases.end_date"];
          monthly_rent?: parameters["rowFilter.leases.monthly_rent"];
          deposit?: parameters["rowFilter.leases.deposit"];
          is_signed?: parameters["rowFilter.leases.is_signed"];
          license?: parameters["rowFilter.leases.license"];
        };
        body: {
          /** leases */
          leases?: definitions["leases"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/listings": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.listings.id"];
          unit_id?: parameters["rowFilter.listings.unit_id"];
          created_at?: parameters["rowFilter.listings.created_at"];
          updated_at?: parameters["rowFilter.listings.updated_at"];
          is_active?: parameters["rowFilter.listings.is_active"];
          available_on?: parameters["rowFilter.listings.available_on"];
          lease_length?: parameters["rowFilter.listings.lease_length"];
          title?: parameters["rowFilter.listings.title"];
          description?: parameters["rowFilter.listings.description"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["listings"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** listings */
          listings?: definitions["listings"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.listings.id"];
          unit_id?: parameters["rowFilter.listings.unit_id"];
          created_at?: parameters["rowFilter.listings.created_at"];
          updated_at?: parameters["rowFilter.listings.updated_at"];
          is_active?: parameters["rowFilter.listings.is_active"];
          available_on?: parameters["rowFilter.listings.available_on"];
          lease_length?: parameters["rowFilter.listings.lease_length"];
          title?: parameters["rowFilter.listings.title"];
          description?: parameters["rowFilter.listings.description"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.listings.id"];
          unit_id?: parameters["rowFilter.listings.unit_id"];
          created_at?: parameters["rowFilter.listings.created_at"];
          updated_at?: parameters["rowFilter.listings.updated_at"];
          is_active?: parameters["rowFilter.listings.is_active"];
          available_on?: parameters["rowFilter.listings.available_on"];
          lease_length?: parameters["rowFilter.listings.lease_length"];
          title?: parameters["rowFilter.listings.title"];
          description?: parameters["rowFilter.listings.description"];
        };
        body: {
          /** listings */
          listings?: definitions["listings"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/maintenance_orders": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.maintenance_orders.id"];
          tenant_id?: parameters["rowFilter.maintenance_orders.tenant_id"];
          unit_id?: parameters["rowFilter.maintenance_orders.unit_id"];
          property_id?: parameters["rowFilter.maintenance_orders.property_id"];
          client_id?: parameters["rowFilter.maintenance_orders.client_id"];
          created_at?: parameters["rowFilter.maintenance_orders.created_at"];
          updated_at?: parameters["rowFilter.maintenance_orders.updated_at"];
          completed_at?: parameters["rowFilter.maintenance_orders.completed_at"];
          title?: parameters["rowFilter.maintenance_orders.title"];
          description?: parameters["rowFilter.maintenance_orders.description"];
          status?: parameters["rowFilter.maintenance_orders.status"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["maintenance_orders"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** maintenance_orders */
          maintenance_orders?: definitions["maintenance_orders"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.maintenance_orders.id"];
          tenant_id?: parameters["rowFilter.maintenance_orders.tenant_id"];
          unit_id?: parameters["rowFilter.maintenance_orders.unit_id"];
          property_id?: parameters["rowFilter.maintenance_orders.property_id"];
          client_id?: parameters["rowFilter.maintenance_orders.client_id"];
          created_at?: parameters["rowFilter.maintenance_orders.created_at"];
          updated_at?: parameters["rowFilter.maintenance_orders.updated_at"];
          completed_at?: parameters["rowFilter.maintenance_orders.completed_at"];
          title?: parameters["rowFilter.maintenance_orders.title"];
          description?: parameters["rowFilter.maintenance_orders.description"];
          status?: parameters["rowFilter.maintenance_orders.status"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.maintenance_orders.id"];
          tenant_id?: parameters["rowFilter.maintenance_orders.tenant_id"];
          unit_id?: parameters["rowFilter.maintenance_orders.unit_id"];
          property_id?: parameters["rowFilter.maintenance_orders.property_id"];
          client_id?: parameters["rowFilter.maintenance_orders.client_id"];
          created_at?: parameters["rowFilter.maintenance_orders.created_at"];
          updated_at?: parameters["rowFilter.maintenance_orders.updated_at"];
          completed_at?: parameters["rowFilter.maintenance_orders.completed_at"];
          title?: parameters["rowFilter.maintenance_orders.title"];
          description?: parameters["rowFilter.maintenance_orders.description"];
          status?: parameters["rowFilter.maintenance_orders.status"];
        };
        body: {
          /** maintenance_orders */
          maintenance_orders?: definitions["maintenance_orders"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/properties": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.properties.id"];
          client_id?: parameters["rowFilter.properties.client_id"];
          created_at?: parameters["rowFilter.properties.created_at"];
          updated_at?: parameters["rowFilter.properties.updated_at"];
          area?: parameters["rowFilter.properties.area"];
          block?: parameters["rowFilter.properties.block"];
          avenue?: parameters["rowFilter.properties.avenue"];
          street?: parameters["rowFilter.properties.street"];
          number?: parameters["rowFilter.properties.number"];
          coordinates?: parameters["rowFilter.properties.coordinates"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["properties"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** properties */
          properties?: definitions["properties"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.properties.id"];
          client_id?: parameters["rowFilter.properties.client_id"];
          created_at?: parameters["rowFilter.properties.created_at"];
          updated_at?: parameters["rowFilter.properties.updated_at"];
          area?: parameters["rowFilter.properties.area"];
          block?: parameters["rowFilter.properties.block"];
          avenue?: parameters["rowFilter.properties.avenue"];
          street?: parameters["rowFilter.properties.street"];
          number?: parameters["rowFilter.properties.number"];
          coordinates?: parameters["rowFilter.properties.coordinates"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.properties.id"];
          client_id?: parameters["rowFilter.properties.client_id"];
          created_at?: parameters["rowFilter.properties.created_at"];
          updated_at?: parameters["rowFilter.properties.updated_at"];
          area?: parameters["rowFilter.properties.area"];
          block?: parameters["rowFilter.properties.block"];
          avenue?: parameters["rowFilter.properties.avenue"];
          street?: parameters["rowFilter.properties.street"];
          number?: parameters["rowFilter.properties.number"];
          coordinates?: parameters["rowFilter.properties.coordinates"];
        };
        body: {
          /** properties */
          properties?: definitions["properties"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/tenants": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.tenants.id"];
          created_at?: parameters["rowFilter.tenants.created_at"];
          updated_at?: parameters["rowFilter.tenants.updated_at"];
          first_name?: parameters["rowFilter.tenants.first_name"];
          second_name?: parameters["rowFilter.tenants.second_name"];
          third_name?: parameters["rowFilter.tenants.third_name"];
          last_name?: parameters["rowFilter.tenants.last_name"];
          civilid?: parameters["rowFilter.tenants.civilid"];
          dob?: parameters["rowFilter.tenants.dob"];
          phone?: parameters["rowFilter.tenants.phone"];
          email?: parameters["rowFilter.tenants.email"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["tenants"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** tenants */
          tenants?: definitions["tenants"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.tenants.id"];
          created_at?: parameters["rowFilter.tenants.created_at"];
          updated_at?: parameters["rowFilter.tenants.updated_at"];
          first_name?: parameters["rowFilter.tenants.first_name"];
          second_name?: parameters["rowFilter.tenants.second_name"];
          third_name?: parameters["rowFilter.tenants.third_name"];
          last_name?: parameters["rowFilter.tenants.last_name"];
          civilid?: parameters["rowFilter.tenants.civilid"];
          dob?: parameters["rowFilter.tenants.dob"];
          phone?: parameters["rowFilter.tenants.phone"];
          email?: parameters["rowFilter.tenants.email"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.tenants.id"];
          created_at?: parameters["rowFilter.tenants.created_at"];
          updated_at?: parameters["rowFilter.tenants.updated_at"];
          first_name?: parameters["rowFilter.tenants.first_name"];
          second_name?: parameters["rowFilter.tenants.second_name"];
          third_name?: parameters["rowFilter.tenants.third_name"];
          last_name?: parameters["rowFilter.tenants.last_name"];
          civilid?: parameters["rowFilter.tenants.civilid"];
          dob?: parameters["rowFilter.tenants.dob"];
          phone?: parameters["rowFilter.tenants.phone"];
          email?: parameters["rowFilter.tenants.email"];
        };
        body: {
          /** tenants */
          tenants?: definitions["tenants"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/transactions": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.transactions.id"];
          created_at?: parameters["rowFilter.transactions.created_at"];
          updated_at?: parameters["rowFilter.transactions.updated_at"];
          due_date?: parameters["rowFilter.transactions.due_date"];
          is_paid?: parameters["rowFilter.transactions.is_paid"];
          amount?: parameters["rowFilter.transactions.amount"];
          memo?: parameters["rowFilter.transactions.memo"];
          receipt_url?: parameters["rowFilter.transactions.receipt_url"];
          lease_id?: parameters["rowFilter.transactions.lease_id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["transactions"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** transactions */
          transactions?: definitions["transactions"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.transactions.id"];
          created_at?: parameters["rowFilter.transactions.created_at"];
          updated_at?: parameters["rowFilter.transactions.updated_at"];
          due_date?: parameters["rowFilter.transactions.due_date"];
          is_paid?: parameters["rowFilter.transactions.is_paid"];
          amount?: parameters["rowFilter.transactions.amount"];
          memo?: parameters["rowFilter.transactions.memo"];
          receipt_url?: parameters["rowFilter.transactions.receipt_url"];
          lease_id?: parameters["rowFilter.transactions.lease_id"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.transactions.id"];
          created_at?: parameters["rowFilter.transactions.created_at"];
          updated_at?: parameters["rowFilter.transactions.updated_at"];
          due_date?: parameters["rowFilter.transactions.due_date"];
          is_paid?: parameters["rowFilter.transactions.is_paid"];
          amount?: parameters["rowFilter.transactions.amount"];
          memo?: parameters["rowFilter.transactions.memo"];
          receipt_url?: parameters["rowFilter.transactions.receipt_url"];
          lease_id?: parameters["rowFilter.transactions.lease_id"];
        };
        body: {
          /** transactions */
          transactions?: definitions["transactions"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/units": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.units.id"];
          property_id?: parameters["rowFilter.units.property_id"];
          created_at?: parameters["rowFilter.units.created_at"];
          updated_at?: parameters["rowFilter.units.updated_at"];
          unit_number?: parameters["rowFilter.units.unit_number"];
          floor?: parameters["rowFilter.units.floor"];
          size?: parameters["rowFilter.units.size"];
          bed?: parameters["rowFilter.units.bed"];
          bath?: parameters["rowFilter.units.bath"];
          rent_market?: parameters["rowFilter.units.rent_market"];
          type?: parameters["rowFilter.units.type"];
          usage?: parameters["rowFilter.units.usage"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["units"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** units */
          units?: definitions["units"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.units.id"];
          property_id?: parameters["rowFilter.units.property_id"];
          created_at?: parameters["rowFilter.units.created_at"];
          updated_at?: parameters["rowFilter.units.updated_at"];
          unit_number?: parameters["rowFilter.units.unit_number"];
          floor?: parameters["rowFilter.units.floor"];
          size?: parameters["rowFilter.units.size"];
          bed?: parameters["rowFilter.units.bed"];
          bath?: parameters["rowFilter.units.bath"];
          rent_market?: parameters["rowFilter.units.rent_market"];
          type?: parameters["rowFilter.units.type"];
          usage?: parameters["rowFilter.units.usage"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.units.id"];
          property_id?: parameters["rowFilter.units.property_id"];
          created_at?: parameters["rowFilter.units.created_at"];
          updated_at?: parameters["rowFilter.units.updated_at"];
          unit_number?: parameters["rowFilter.units.unit_number"];
          floor?: parameters["rowFilter.units.floor"];
          size?: parameters["rowFilter.units.size"];
          bed?: parameters["rowFilter.units.bed"];
          bath?: parameters["rowFilter.units.bath"];
          rent_market?: parameters["rowFilter.units.rent_market"];
          type?: parameters["rowFilter.units.type"];
          usage?: parameters["rowFilter.units.usage"];
        };
        body: {
          /** units */
          units?: definitions["units"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
}

export interface definitions {
  clients: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * @default extensions.uuid_generate_v4()
     */
    id: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    updated_at?: string;
    /**
     * Format: boolean
     * @default true
     */
    is_active?: boolean;
    /** Format: text */
    first_name?: string;
    /** Format: text */
    second_name?: string;
    /** Format: text */
    third_name?: string;
    /** Format: text */
    last_name?: string;
    /** Format: text */
    civilid?: string;
    /** Format: text */
    phone?: string;
    /** Format: text */
    email?: string;
  };
  expenses: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * @default extensions.uuid_generate_v4()
     */
    id: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `units.id`.<fk table='units' column='id'/>
     */
    unit_id?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `properties.id`.<fk table='properties' column='id'/>
     */
    property_id?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `clients.id`.<fk table='clients' column='id'/>
     */
    client_id?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `maintenance_orders.id`.<fk table='maintenance_orders' column='id'/>
     */
    maintenance_order_id?: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    updated_at?: string;
    /** Format: integer */
    amount?: number;
    /** Format: date */
    date_post?: string;
    /**
     * Format: text
     * @description Note:
     * This is a Foreign Key to `expenses_types.value`.<fk table='expenses_types' column='value'/>
     */
    category?: string;
    /** Format: text */
    memo?: string;
  };
  expenses_types: {
    /**
     * Format: text
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    value: string;
    /** Format: text */
    description?: string;
  };
  leases: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * @default extensions.uuid_generate_v4()
     */
    id: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `tenants.id`.<fk table='tenants' column='id'/>
     */
    tenant_id?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `units.id`.<fk table='units' column='id'/>
     */
    unit_id?: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    updated_at?: string;
    /** Format: date */
    start_date?: string;
    /** Format: date */
    end_date?: string;
    /** Format: integer */
    monthly_rent?: number;
    /** Format: integer */
    deposit?: number;
    /** Format: boolean */
    is_signed?: boolean;
    /** Format: text */
    license?: string;
  };
  listings: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * @default extensions.uuid_generate_v4()
     */
    id: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `units.id`.<fk table='units' column='id'/>
     */
    unit_id?: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    updated_at?: string;
    /** Format: boolean */
    is_active?: boolean;
    /** Format: date */
    available_on?: string;
    /** Format: text */
    lease_length?: string;
    /** Format: text */
    title?: string;
    /** Format: text */
    description?: string;
  };
  maintenance_orders: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * @default extensions.uuid_generate_v4()
     */
    id: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `tenants.id`.<fk table='tenants' column='id'/>
     */
    tenant_id?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `units.id`.<fk table='units' column='id'/>
     */
    unit_id?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `properties.id`.<fk table='properties' column='id'/>
     */
    property_id?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `clients.id`.<fk table='clients' column='id'/>
     */
    client_id?: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    updated_at?: string;
    /** Format: timestamp with time zone */
    completed_at?: string;
    /** Format: text */
    title?: string;
    /** Format: text */
    description?: string;
    /** Format: text */
    status?: string;
  };
  properties: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * @default extensions.uuid_generate_v4()
     */
    id: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `clients.id`.<fk table='clients' column='id'/>
     */
    client_id?: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    updated_at?: string;
    /** Format: text */
    area?: string;
    /** Format: text */
    block?: string;
    /** Format: text */
    avenue?: string;
    /** Format: text */
    street?: string;
    /** Format: text */
    number?: string;
    /** Format: point */
    coordinates?: string;
  };
  tenants: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * @default extensions.uuid_generate_v4()
     */
    id: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    updated_at?: string;
    /** Format: text */
    first_name?: string;
    /** Format: text */
    second_name?: string;
    /** Format: text */
    third_name?: string;
    /** Format: text */
    last_name?: string;
    /** Format: text */
    civilid?: string;
    /** Format: date */
    dob?: string;
    /** Format: text */
    phone?: string;
    /** Format: text */
    email?: string;
  };
  transactions: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * @default extensions.uuid_generate_v4()
     */
    id: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    updated_at?: string;
    /** Format: date */
    due_date?: string;
    /** Format: boolean */
    is_paid?: boolean;
    /** Format: integer */
    amount?: number;
    /** Format: text */
    memo?: string;
    /** Format: text */
    receipt_url?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `leases.id`.<fk table='leases' column='id'/>
     */
    lease_id?: string;
  };
  units: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * @default extensions.uuid_generate_v4()
     */
    id: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `properties.id`.<fk table='properties' column='id'/>
     */
    property_id?: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    updated_at?: string;
    /** Format: text */
    unit_number?: string;
    /** Format: text */
    floor?: string;
    /** Format: integer */
    size?: number;
    /** Format: numeric */
    bed?: number;
    /** Format: numeric */
    bath?: number;
    /** Format: integer */
    rent_market?: number;
    /** Format: text */
    type?: string;
    /** Format: text */
    usage?: string;
  };
}

export interface parameters {
  /**
   * @description Preference
   * @enum {string}
   */
  preferParams: "params=single-object";
  /**
   * @description Preference
   * @enum {string}
   */
  preferReturn: "return=representation" | "return=minimal" | "return=none";
  /**
   * @description Preference
   * @enum {string}
   */
  preferCount: "count=none";
  /** @description Filtering Columns */
  select: string;
  /** @description On Conflict */
  on_conflict: string;
  /** @description Ordering */
  order: string;
  /** @description Limiting and Pagination */
  range: string;
  /**
   * @description Limiting and Pagination
   * @default items
   */
  rangeUnit: string;
  /** @description Limiting and Pagination */
  offset: string;
  /** @description Limiting and Pagination */
  limit: string;
  /** @description clients */
  "body.clients": definitions["clients"];
  /** Format: uuid */
  "rowFilter.clients.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.clients.created_at": string;
  /** Format: timestamp with time zone */
  "rowFilter.clients.updated_at": string;
  /** Format: boolean */
  "rowFilter.clients.is_active": string;
  /** Format: text */
  "rowFilter.clients.first_name": string;
  /** Format: text */
  "rowFilter.clients.second_name": string;
  /** Format: text */
  "rowFilter.clients.third_name": string;
  /** Format: text */
  "rowFilter.clients.last_name": string;
  /** Format: text */
  "rowFilter.clients.civilid": string;
  /** Format: text */
  "rowFilter.clients.phone": string;
  /** Format: text */
  "rowFilter.clients.email": string;
  /** @description expenses */
  "body.expenses": definitions["expenses"];
  /** Format: uuid */
  "rowFilter.expenses.id": string;
  /** Format: uuid */
  "rowFilter.expenses.unit_id": string;
  /** Format: uuid */
  "rowFilter.expenses.property_id": string;
  /** Format: uuid */
  "rowFilter.expenses.client_id": string;
  /** Format: uuid */
  "rowFilter.expenses.maintenance_order_id": string;
  /** Format: timestamp with time zone */
  "rowFilter.expenses.created_at": string;
  /** Format: timestamp with time zone */
  "rowFilter.expenses.updated_at": string;
  /** Format: integer */
  "rowFilter.expenses.amount": string;
  /** Format: date */
  "rowFilter.expenses.date_post": string;
  /** Format: text */
  "rowFilter.expenses.category": string;
  /** Format: text */
  "rowFilter.expenses.memo": string;
  /** @description expenses_types */
  "body.expenses_types": definitions["expenses_types"];
  /** Format: text */
  "rowFilter.expenses_types.value": string;
  /** Format: text */
  "rowFilter.expenses_types.description": string;
  /** @description leases */
  "body.leases": definitions["leases"];
  /** Format: uuid */
  "rowFilter.leases.id": string;
  /** Format: uuid */
  "rowFilter.leases.tenant_id": string;
  /** Format: uuid */
  "rowFilter.leases.unit_id": string;
  /** Format: timestamp with time zone */
  "rowFilter.leases.created_at": string;
  /** Format: timestamp with time zone */
  "rowFilter.leases.updated_at": string;
  /** Format: date */
  "rowFilter.leases.start_date": string;
  /** Format: date */
  "rowFilter.leases.end_date": string;
  /** Format: integer */
  "rowFilter.leases.monthly_rent": string;
  /** Format: integer */
  "rowFilter.leases.deposit": string;
  /** Format: boolean */
  "rowFilter.leases.is_signed": string;
  /** Format: text */
  "rowFilter.leases.license": string;
  /** @description listings */
  "body.listings": definitions["listings"];
  /** Format: uuid */
  "rowFilter.listings.id": string;
  /** Format: uuid */
  "rowFilter.listings.unit_id": string;
  /** Format: timestamp with time zone */
  "rowFilter.listings.created_at": string;
  /** Format: timestamp with time zone */
  "rowFilter.listings.updated_at": string;
  /** Format: boolean */
  "rowFilter.listings.is_active": string;
  /** Format: date */
  "rowFilter.listings.available_on": string;
  /** Format: text */
  "rowFilter.listings.lease_length": string;
  /** Format: text */
  "rowFilter.listings.title": string;
  /** Format: text */
  "rowFilter.listings.description": string;
  /** @description maintenance_orders */
  "body.maintenance_orders": definitions["maintenance_orders"];
  /** Format: uuid */
  "rowFilter.maintenance_orders.id": string;
  /** Format: uuid */
  "rowFilter.maintenance_orders.tenant_id": string;
  /** Format: uuid */
  "rowFilter.maintenance_orders.unit_id": string;
  /** Format: uuid */
  "rowFilter.maintenance_orders.property_id": string;
  /** Format: uuid */
  "rowFilter.maintenance_orders.client_id": string;
  /** Format: timestamp with time zone */
  "rowFilter.maintenance_orders.created_at": string;
  /** Format: timestamp with time zone */
  "rowFilter.maintenance_orders.updated_at": string;
  /** Format: timestamp with time zone */
  "rowFilter.maintenance_orders.completed_at": string;
  /** Format: text */
  "rowFilter.maintenance_orders.title": string;
  /** Format: text */
  "rowFilter.maintenance_orders.description": string;
  /** Format: text */
  "rowFilter.maintenance_orders.status": string;
  /** @description properties */
  "body.properties": definitions["properties"];
  /** Format: uuid */
  "rowFilter.properties.id": string;
  /** Format: uuid */
  "rowFilter.properties.client_id": string;
  /** Format: timestamp with time zone */
  "rowFilter.properties.created_at": string;
  /** Format: timestamp with time zone */
  "rowFilter.properties.updated_at": string;
  /** Format: text */
  "rowFilter.properties.area": string;
  /** Format: text */
  "rowFilter.properties.block": string;
  /** Format: text */
  "rowFilter.properties.avenue": string;
  /** Format: text */
  "rowFilter.properties.street": string;
  /** Format: text */
  "rowFilter.properties.number": string;
  /** Format: point */
  "rowFilter.properties.coordinates": string;
  /** @description tenants */
  "body.tenants": definitions["tenants"];
  /** Format: uuid */
  "rowFilter.tenants.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.tenants.created_at": string;
  /** Format: timestamp with time zone */
  "rowFilter.tenants.updated_at": string;
  /** Format: text */
  "rowFilter.tenants.first_name": string;
  /** Format: text */
  "rowFilter.tenants.second_name": string;
  /** Format: text */
  "rowFilter.tenants.third_name": string;
  /** Format: text */
  "rowFilter.tenants.last_name": string;
  /** Format: text */
  "rowFilter.tenants.civilid": string;
  /** Format: date */
  "rowFilter.tenants.dob": string;
  /** Format: text */
  "rowFilter.tenants.phone": string;
  /** Format: text */
  "rowFilter.tenants.email": string;
  /** @description transactions */
  "body.transactions": definitions["transactions"];
  /** Format: uuid */
  "rowFilter.transactions.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.transactions.created_at": string;
  /** Format: timestamp with time zone */
  "rowFilter.transactions.updated_at": string;
  /** Format: date */
  "rowFilter.transactions.due_date": string;
  /** Format: boolean */
  "rowFilter.transactions.is_paid": string;
  /** Format: integer */
  "rowFilter.transactions.amount": string;
  /** Format: text */
  "rowFilter.transactions.memo": string;
  /** Format: text */
  "rowFilter.transactions.receipt_url": string;
  /** Format: uuid */
  "rowFilter.transactions.lease_id": string;
  /** @description units */
  "body.units": definitions["units"];
  /** Format: uuid */
  "rowFilter.units.id": string;
  /** Format: uuid */
  "rowFilter.units.property_id": string;
  /** Format: timestamp with time zone */
  "rowFilter.units.created_at": string;
  /** Format: timestamp with time zone */
  "rowFilter.units.updated_at": string;
  /** Format: text */
  "rowFilter.units.unit_number": string;
  /** Format: text */
  "rowFilter.units.floor": string;
  /** Format: integer */
  "rowFilter.units.size": string;
  /** Format: numeric */
  "rowFilter.units.bed": string;
  /** Format: numeric */
  "rowFilter.units.bath": string;
  /** Format: integer */
  "rowFilter.units.rent_market": string;
  /** Format: text */
  "rowFilter.units.type": string;
  /** Format: text */
  "rowFilter.units.usage": string;
}

export interface operations {}

export interface external {}
